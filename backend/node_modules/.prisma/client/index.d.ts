
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Users_ws
 * 
 */
export type Users_ws = $Result.DefaultSelection<Prisma.$Users_wsPayload>
/**
 * Model Pets_ws
 * 
 */
export type Pets_ws = $Result.DefaultSelection<Prisma.$Pets_wsPayload>
/**
 * Model Races_ws
 * 
 */
export type Races_ws = $Result.DefaultSelection<Prisma.$Races_wsPayload>
/**
 * Model Categories_ws
 * 
 */
export type Categories_ws = $Result.DefaultSelection<Prisma.$Categories_wsPayload>
/**
 * Model Genders_ws
 * 
 */
export type Genders_ws = $Result.DefaultSelection<Prisma.$Genders_wsPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const Estados_ws: {
  disponible: 'disponible',
  adoptado: 'adoptado'
};

export type Estados_ws = (typeof Estados_ws)[keyof typeof Estados_ws]

}

export type Estados_ws = $Enums.Estados_ws

export const Estados_ws: typeof $Enums.Estados_ws

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users_ws
 * const users_ws = await prisma.users_ws.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users_ws
   * const users_ws = await prisma.users_ws.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.users_ws`: Exposes CRUD operations for the **Users_ws** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users_ws
    * const users_ws = await prisma.users_ws.findMany()
    * ```
    */
  get users_ws(): Prisma.Users_wsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.pets_ws`: Exposes CRUD operations for the **Pets_ws** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pets_ws
    * const pets_ws = await prisma.pets_ws.findMany()
    * ```
    */
  get pets_ws(): Prisma.Pets_wsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.races_ws`: Exposes CRUD operations for the **Races_ws** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Races_ws
    * const races_ws = await prisma.races_ws.findMany()
    * ```
    */
  get races_ws(): Prisma.Races_wsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.categories_ws`: Exposes CRUD operations for the **Categories_ws** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categories_ws
    * const categories_ws = await prisma.categories_ws.findMany()
    * ```
    */
  get categories_ws(): Prisma.Categories_wsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.genders_ws`: Exposes CRUD operations for the **Genders_ws** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Genders_ws
    * const genders_ws = await prisma.genders_ws.findMany()
    * ```
    */
  get genders_ws(): Prisma.Genders_wsDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.6.0
   * Query Engine version: f676762280b54cd07c770017ed3711ddde35f37a
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Users_ws: 'Users_ws',
    Pets_ws: 'Pets_ws',
    Races_ws: 'Races_ws',
    Categories_ws: 'Categories_ws',
    Genders_ws: 'Genders_ws'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "users_ws" | "pets_ws" | "races_ws" | "categories_ws" | "genders_ws"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Users_ws: {
        payload: Prisma.$Users_wsPayload<ExtArgs>
        fields: Prisma.Users_wsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Users_wsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Users_wsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Users_wsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Users_wsPayload>
          }
          findFirst: {
            args: Prisma.Users_wsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Users_wsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Users_wsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Users_wsPayload>
          }
          findMany: {
            args: Prisma.Users_wsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Users_wsPayload>[]
          }
          create: {
            args: Prisma.Users_wsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Users_wsPayload>
          }
          createMany: {
            args: Prisma.Users_wsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.Users_wsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Users_wsPayload>
          }
          update: {
            args: Prisma.Users_wsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Users_wsPayload>
          }
          deleteMany: {
            args: Prisma.Users_wsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Users_wsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.Users_wsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Users_wsPayload>
          }
          aggregate: {
            args: Prisma.Users_wsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsers_ws>
          }
          groupBy: {
            args: Prisma.Users_wsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Users_wsGroupByOutputType>[]
          }
          count: {
            args: Prisma.Users_wsCountArgs<ExtArgs>
            result: $Utils.Optional<Users_wsCountAggregateOutputType> | number
          }
        }
      }
      Pets_ws: {
        payload: Prisma.$Pets_wsPayload<ExtArgs>
        fields: Prisma.Pets_wsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Pets_wsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Pets_wsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Pets_wsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Pets_wsPayload>
          }
          findFirst: {
            args: Prisma.Pets_wsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Pets_wsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Pets_wsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Pets_wsPayload>
          }
          findMany: {
            args: Prisma.Pets_wsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Pets_wsPayload>[]
          }
          create: {
            args: Prisma.Pets_wsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Pets_wsPayload>
          }
          createMany: {
            args: Prisma.Pets_wsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.Pets_wsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Pets_wsPayload>
          }
          update: {
            args: Prisma.Pets_wsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Pets_wsPayload>
          }
          deleteMany: {
            args: Prisma.Pets_wsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Pets_wsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.Pets_wsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Pets_wsPayload>
          }
          aggregate: {
            args: Prisma.Pets_wsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePets_ws>
          }
          groupBy: {
            args: Prisma.Pets_wsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Pets_wsGroupByOutputType>[]
          }
          count: {
            args: Prisma.Pets_wsCountArgs<ExtArgs>
            result: $Utils.Optional<Pets_wsCountAggregateOutputType> | number
          }
        }
      }
      Races_ws: {
        payload: Prisma.$Races_wsPayload<ExtArgs>
        fields: Prisma.Races_wsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Races_wsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Races_wsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Races_wsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Races_wsPayload>
          }
          findFirst: {
            args: Prisma.Races_wsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Races_wsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Races_wsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Races_wsPayload>
          }
          findMany: {
            args: Prisma.Races_wsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Races_wsPayload>[]
          }
          create: {
            args: Prisma.Races_wsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Races_wsPayload>
          }
          createMany: {
            args: Prisma.Races_wsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.Races_wsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Races_wsPayload>
          }
          update: {
            args: Prisma.Races_wsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Races_wsPayload>
          }
          deleteMany: {
            args: Prisma.Races_wsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Races_wsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.Races_wsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Races_wsPayload>
          }
          aggregate: {
            args: Prisma.Races_wsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRaces_ws>
          }
          groupBy: {
            args: Prisma.Races_wsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Races_wsGroupByOutputType>[]
          }
          count: {
            args: Prisma.Races_wsCountArgs<ExtArgs>
            result: $Utils.Optional<Races_wsCountAggregateOutputType> | number
          }
        }
      }
      Categories_ws: {
        payload: Prisma.$Categories_wsPayload<ExtArgs>
        fields: Prisma.Categories_wsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Categories_wsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Categories_wsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Categories_wsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Categories_wsPayload>
          }
          findFirst: {
            args: Prisma.Categories_wsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Categories_wsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Categories_wsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Categories_wsPayload>
          }
          findMany: {
            args: Prisma.Categories_wsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Categories_wsPayload>[]
          }
          create: {
            args: Prisma.Categories_wsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Categories_wsPayload>
          }
          createMany: {
            args: Prisma.Categories_wsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.Categories_wsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Categories_wsPayload>
          }
          update: {
            args: Prisma.Categories_wsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Categories_wsPayload>
          }
          deleteMany: {
            args: Prisma.Categories_wsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Categories_wsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.Categories_wsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Categories_wsPayload>
          }
          aggregate: {
            args: Prisma.Categories_wsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategories_ws>
          }
          groupBy: {
            args: Prisma.Categories_wsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Categories_wsGroupByOutputType>[]
          }
          count: {
            args: Prisma.Categories_wsCountArgs<ExtArgs>
            result: $Utils.Optional<Categories_wsCountAggregateOutputType> | number
          }
        }
      }
      Genders_ws: {
        payload: Prisma.$Genders_wsPayload<ExtArgs>
        fields: Prisma.Genders_wsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Genders_wsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Genders_wsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Genders_wsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Genders_wsPayload>
          }
          findFirst: {
            args: Prisma.Genders_wsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Genders_wsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Genders_wsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Genders_wsPayload>
          }
          findMany: {
            args: Prisma.Genders_wsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Genders_wsPayload>[]
          }
          create: {
            args: Prisma.Genders_wsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Genders_wsPayload>
          }
          createMany: {
            args: Prisma.Genders_wsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.Genders_wsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Genders_wsPayload>
          }
          update: {
            args: Prisma.Genders_wsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Genders_wsPayload>
          }
          deleteMany: {
            args: Prisma.Genders_wsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Genders_wsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.Genders_wsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Genders_wsPayload>
          }
          aggregate: {
            args: Prisma.Genders_wsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateGenders_ws>
          }
          groupBy: {
            args: Prisma.Genders_wsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Genders_wsGroupByOutputType>[]
          }
          count: {
            args: Prisma.Genders_wsCountArgs<ExtArgs>
            result: $Utils.Optional<Genders_wsCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    users_ws?: Users_wsOmit
    pets_ws?: Pets_wsOmit
    races_ws?: Races_wsOmit
    categories_ws?: Categories_wsOmit
    genders_ws?: Genders_wsOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type Users_wsCountOutputType
   */

  export type Users_wsCountOutputType = {
    pet_ws: number
  }

  export type Users_wsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pet_ws?: boolean | Users_wsCountOutputTypeCountPet_wsArgs
  }

  // Custom InputTypes
  /**
   * Users_wsCountOutputType without action
   */
  export type Users_wsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users_wsCountOutputType
     */
    select?: Users_wsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Users_wsCountOutputType without action
   */
  export type Users_wsCountOutputTypeCountPet_wsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Pets_wsWhereInput
  }


  /**
   * Count Type Races_wsCountOutputType
   */

  export type Races_wsCountOutputType = {
    pet_ws: number
  }

  export type Races_wsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pet_ws?: boolean | Races_wsCountOutputTypeCountPet_wsArgs
  }

  // Custom InputTypes
  /**
   * Races_wsCountOutputType without action
   */
  export type Races_wsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Races_wsCountOutputType
     */
    select?: Races_wsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Races_wsCountOutputType without action
   */
  export type Races_wsCountOutputTypeCountPet_wsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Pets_wsWhereInput
  }


  /**
   * Count Type Categories_wsCountOutputType
   */

  export type Categories_wsCountOutputType = {
    pet_ws: number
  }

  export type Categories_wsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pet_ws?: boolean | Categories_wsCountOutputTypeCountPet_wsArgs
  }

  // Custom InputTypes
  /**
   * Categories_wsCountOutputType without action
   */
  export type Categories_wsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categories_wsCountOutputType
     */
    select?: Categories_wsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Categories_wsCountOutputType without action
   */
  export type Categories_wsCountOutputTypeCountPet_wsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Pets_wsWhereInput
  }


  /**
   * Count Type Genders_wsCountOutputType
   */

  export type Genders_wsCountOutputType = {
    pet_ws: number
  }

  export type Genders_wsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pet_ws?: boolean | Genders_wsCountOutputTypeCountPet_wsArgs
  }

  // Custom InputTypes
  /**
   * Genders_wsCountOutputType without action
   */
  export type Genders_wsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Genders_wsCountOutputType
     */
    select?: Genders_wsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Genders_wsCountOutputType without action
   */
  export type Genders_wsCountOutputTypeCountPet_wsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Pets_wsWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Users_ws
   */

  export type AggregateUsers_ws = {
    _count: Users_wsCountAggregateOutputType | null
    _avg: Users_wsAvgAggregateOutputType | null
    _sum: Users_wsSumAggregateOutputType | null
    _min: Users_wsMinAggregateOutputType | null
    _max: Users_wsMaxAggregateOutputType | null
  }

  export type Users_wsAvgAggregateOutputType = {
    id_ws: number | null
  }

  export type Users_wsSumAggregateOutputType = {
    id_ws: number | null
  }

  export type Users_wsMinAggregateOutputType = {
    id_ws: number | null
    fullname_ws: string | null
    email_ws: string | null
    password_ws: string | null
  }

  export type Users_wsMaxAggregateOutputType = {
    id_ws: number | null
    fullname_ws: string | null
    email_ws: string | null
    password_ws: string | null
  }

  export type Users_wsCountAggregateOutputType = {
    id_ws: number
    fullname_ws: number
    email_ws: number
    password_ws: number
    _all: number
  }


  export type Users_wsAvgAggregateInputType = {
    id_ws?: true
  }

  export type Users_wsSumAggregateInputType = {
    id_ws?: true
  }

  export type Users_wsMinAggregateInputType = {
    id_ws?: true
    fullname_ws?: true
    email_ws?: true
    password_ws?: true
  }

  export type Users_wsMaxAggregateInputType = {
    id_ws?: true
    fullname_ws?: true
    email_ws?: true
    password_ws?: true
  }

  export type Users_wsCountAggregateInputType = {
    id_ws?: true
    fullname_ws?: true
    email_ws?: true
    password_ws?: true
    _all?: true
  }

  export type Users_wsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users_ws to aggregate.
     */
    where?: Users_wsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users_ws to fetch.
     */
    orderBy?: Users_wsOrderByWithRelationInput | Users_wsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Users_wsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users_ws from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users_ws.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users_ws
    **/
    _count?: true | Users_wsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Users_wsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Users_wsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Users_wsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Users_wsMaxAggregateInputType
  }

  export type GetUsers_wsAggregateType<T extends Users_wsAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers_ws]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers_ws[P]>
      : GetScalarType<T[P], AggregateUsers_ws[P]>
  }




  export type Users_wsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Users_wsWhereInput
    orderBy?: Users_wsOrderByWithAggregationInput | Users_wsOrderByWithAggregationInput[]
    by: Users_wsScalarFieldEnum[] | Users_wsScalarFieldEnum
    having?: Users_wsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Users_wsCountAggregateInputType | true
    _avg?: Users_wsAvgAggregateInputType
    _sum?: Users_wsSumAggregateInputType
    _min?: Users_wsMinAggregateInputType
    _max?: Users_wsMaxAggregateInputType
  }

  export type Users_wsGroupByOutputType = {
    id_ws: number
    fullname_ws: string
    email_ws: string
    password_ws: string
    _count: Users_wsCountAggregateOutputType | null
    _avg: Users_wsAvgAggregateOutputType | null
    _sum: Users_wsSumAggregateOutputType | null
    _min: Users_wsMinAggregateOutputType | null
    _max: Users_wsMaxAggregateOutputType | null
  }

  type GetUsers_wsGroupByPayload<T extends Users_wsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Users_wsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Users_wsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Users_wsGroupByOutputType[P]>
            : GetScalarType<T[P], Users_wsGroupByOutputType[P]>
        }
      >
    >


  export type Users_wsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_ws?: boolean
    fullname_ws?: boolean
    email_ws?: boolean
    password_ws?: boolean
    pet_ws?: boolean | Users_ws$pet_wsArgs<ExtArgs>
    _count?: boolean | Users_wsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["users_ws"]>



  export type Users_wsSelectScalar = {
    id_ws?: boolean
    fullname_ws?: boolean
    email_ws?: boolean
    password_ws?: boolean
  }

  export type Users_wsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_ws" | "fullname_ws" | "email_ws" | "password_ws", ExtArgs["result"]["users_ws"]>
  export type Users_wsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pet_ws?: boolean | Users_ws$pet_wsArgs<ExtArgs>
    _count?: boolean | Users_wsCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $Users_wsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Users_ws"
    objects: {
      pet_ws: Prisma.$Pets_wsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_ws: number
      fullname_ws: string
      email_ws: string
      password_ws: string
    }, ExtArgs["result"]["users_ws"]>
    composites: {}
  }

  type Users_wsGetPayload<S extends boolean | null | undefined | Users_wsDefaultArgs> = $Result.GetResult<Prisma.$Users_wsPayload, S>

  type Users_wsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<Users_wsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Users_wsCountAggregateInputType | true
    }

  export interface Users_wsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Users_ws'], meta: { name: 'Users_ws' } }
    /**
     * Find zero or one Users_ws that matches the filter.
     * @param {Users_wsFindUniqueArgs} args - Arguments to find a Users_ws
     * @example
     * // Get one Users_ws
     * const users_ws = await prisma.users_ws.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Users_wsFindUniqueArgs>(args: SelectSubset<T, Users_wsFindUniqueArgs<ExtArgs>>): Prisma__Users_wsClient<$Result.GetResult<Prisma.$Users_wsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Users_ws that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {Users_wsFindUniqueOrThrowArgs} args - Arguments to find a Users_ws
     * @example
     * // Get one Users_ws
     * const users_ws = await prisma.users_ws.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Users_wsFindUniqueOrThrowArgs>(args: SelectSubset<T, Users_wsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Users_wsClient<$Result.GetResult<Prisma.$Users_wsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users_ws that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Users_wsFindFirstArgs} args - Arguments to find a Users_ws
     * @example
     * // Get one Users_ws
     * const users_ws = await prisma.users_ws.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Users_wsFindFirstArgs>(args?: SelectSubset<T, Users_wsFindFirstArgs<ExtArgs>>): Prisma__Users_wsClient<$Result.GetResult<Prisma.$Users_wsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users_ws that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Users_wsFindFirstOrThrowArgs} args - Arguments to find a Users_ws
     * @example
     * // Get one Users_ws
     * const users_ws = await prisma.users_ws.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Users_wsFindFirstOrThrowArgs>(args?: SelectSubset<T, Users_wsFindFirstOrThrowArgs<ExtArgs>>): Prisma__Users_wsClient<$Result.GetResult<Prisma.$Users_wsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users_ws that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Users_wsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users_ws
     * const users_ws = await prisma.users_ws.findMany()
     * 
     * // Get first 10 Users_ws
     * const users_ws = await prisma.users_ws.findMany({ take: 10 })
     * 
     * // Only select the `id_ws`
     * const users_wsWithId_wsOnly = await prisma.users_ws.findMany({ select: { id_ws: true } })
     * 
     */
    findMany<T extends Users_wsFindManyArgs>(args?: SelectSubset<T, Users_wsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Users_wsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Users_ws.
     * @param {Users_wsCreateArgs} args - Arguments to create a Users_ws.
     * @example
     * // Create one Users_ws
     * const Users_ws = await prisma.users_ws.create({
     *   data: {
     *     // ... data to create a Users_ws
     *   }
     * })
     * 
     */
    create<T extends Users_wsCreateArgs>(args: SelectSubset<T, Users_wsCreateArgs<ExtArgs>>): Prisma__Users_wsClient<$Result.GetResult<Prisma.$Users_wsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users_ws.
     * @param {Users_wsCreateManyArgs} args - Arguments to create many Users_ws.
     * @example
     * // Create many Users_ws
     * const users_ws = await prisma.users_ws.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Users_wsCreateManyArgs>(args?: SelectSubset<T, Users_wsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Users_ws.
     * @param {Users_wsDeleteArgs} args - Arguments to delete one Users_ws.
     * @example
     * // Delete one Users_ws
     * const Users_ws = await prisma.users_ws.delete({
     *   where: {
     *     // ... filter to delete one Users_ws
     *   }
     * })
     * 
     */
    delete<T extends Users_wsDeleteArgs>(args: SelectSubset<T, Users_wsDeleteArgs<ExtArgs>>): Prisma__Users_wsClient<$Result.GetResult<Prisma.$Users_wsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Users_ws.
     * @param {Users_wsUpdateArgs} args - Arguments to update one Users_ws.
     * @example
     * // Update one Users_ws
     * const users_ws = await prisma.users_ws.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Users_wsUpdateArgs>(args: SelectSubset<T, Users_wsUpdateArgs<ExtArgs>>): Prisma__Users_wsClient<$Result.GetResult<Prisma.$Users_wsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users_ws.
     * @param {Users_wsDeleteManyArgs} args - Arguments to filter Users_ws to delete.
     * @example
     * // Delete a few Users_ws
     * const { count } = await prisma.users_ws.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Users_wsDeleteManyArgs>(args?: SelectSubset<T, Users_wsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users_ws.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Users_wsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users_ws
     * const users_ws = await prisma.users_ws.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Users_wsUpdateManyArgs>(args: SelectSubset<T, Users_wsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Users_ws.
     * @param {Users_wsUpsertArgs} args - Arguments to update or create a Users_ws.
     * @example
     * // Update or create a Users_ws
     * const users_ws = await prisma.users_ws.upsert({
     *   create: {
     *     // ... data to create a Users_ws
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users_ws we want to update
     *   }
     * })
     */
    upsert<T extends Users_wsUpsertArgs>(args: SelectSubset<T, Users_wsUpsertArgs<ExtArgs>>): Prisma__Users_wsClient<$Result.GetResult<Prisma.$Users_wsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users_ws.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Users_wsCountArgs} args - Arguments to filter Users_ws to count.
     * @example
     * // Count the number of Users_ws
     * const count = await prisma.users_ws.count({
     *   where: {
     *     // ... the filter for the Users_ws we want to count
     *   }
     * })
    **/
    count<T extends Users_wsCountArgs>(
      args?: Subset<T, Users_wsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Users_wsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users_ws.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Users_wsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Users_wsAggregateArgs>(args: Subset<T, Users_wsAggregateArgs>): Prisma.PrismaPromise<GetUsers_wsAggregateType<T>>

    /**
     * Group by Users_ws.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Users_wsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Users_wsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Users_wsGroupByArgs['orderBy'] }
        : { orderBy?: Users_wsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Users_wsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsers_wsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Users_ws model
   */
  readonly fields: Users_wsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Users_ws.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Users_wsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pet_ws<T extends Users_ws$pet_wsArgs<ExtArgs> = {}>(args?: Subset<T, Users_ws$pet_wsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Pets_wsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Users_ws model
   */
  interface Users_wsFieldRefs {
    readonly id_ws: FieldRef<"Users_ws", 'Int'>
    readonly fullname_ws: FieldRef<"Users_ws", 'String'>
    readonly email_ws: FieldRef<"Users_ws", 'String'>
    readonly password_ws: FieldRef<"Users_ws", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Users_ws findUnique
   */
  export type Users_wsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users_ws
     */
    select?: Users_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users_ws
     */
    omit?: Users_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Users_wsInclude<ExtArgs> | null
    /**
     * Filter, which Users_ws to fetch.
     */
    where: Users_wsWhereUniqueInput
  }

  /**
   * Users_ws findUniqueOrThrow
   */
  export type Users_wsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users_ws
     */
    select?: Users_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users_ws
     */
    omit?: Users_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Users_wsInclude<ExtArgs> | null
    /**
     * Filter, which Users_ws to fetch.
     */
    where: Users_wsWhereUniqueInput
  }

  /**
   * Users_ws findFirst
   */
  export type Users_wsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users_ws
     */
    select?: Users_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users_ws
     */
    omit?: Users_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Users_wsInclude<ExtArgs> | null
    /**
     * Filter, which Users_ws to fetch.
     */
    where?: Users_wsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users_ws to fetch.
     */
    orderBy?: Users_wsOrderByWithRelationInput | Users_wsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users_ws.
     */
    cursor?: Users_wsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users_ws from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users_ws.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users_ws.
     */
    distinct?: Users_wsScalarFieldEnum | Users_wsScalarFieldEnum[]
  }

  /**
   * Users_ws findFirstOrThrow
   */
  export type Users_wsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users_ws
     */
    select?: Users_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users_ws
     */
    omit?: Users_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Users_wsInclude<ExtArgs> | null
    /**
     * Filter, which Users_ws to fetch.
     */
    where?: Users_wsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users_ws to fetch.
     */
    orderBy?: Users_wsOrderByWithRelationInput | Users_wsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users_ws.
     */
    cursor?: Users_wsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users_ws from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users_ws.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users_ws.
     */
    distinct?: Users_wsScalarFieldEnum | Users_wsScalarFieldEnum[]
  }

  /**
   * Users_ws findMany
   */
  export type Users_wsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users_ws
     */
    select?: Users_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users_ws
     */
    omit?: Users_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Users_wsInclude<ExtArgs> | null
    /**
     * Filter, which Users_ws to fetch.
     */
    where?: Users_wsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users_ws to fetch.
     */
    orderBy?: Users_wsOrderByWithRelationInput | Users_wsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users_ws.
     */
    cursor?: Users_wsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users_ws from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users_ws.
     */
    skip?: number
    distinct?: Users_wsScalarFieldEnum | Users_wsScalarFieldEnum[]
  }

  /**
   * Users_ws create
   */
  export type Users_wsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users_ws
     */
    select?: Users_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users_ws
     */
    omit?: Users_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Users_wsInclude<ExtArgs> | null
    /**
     * The data needed to create a Users_ws.
     */
    data: XOR<Users_wsCreateInput, Users_wsUncheckedCreateInput>
  }

  /**
   * Users_ws createMany
   */
  export type Users_wsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users_ws.
     */
    data: Users_wsCreateManyInput | Users_wsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Users_ws update
   */
  export type Users_wsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users_ws
     */
    select?: Users_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users_ws
     */
    omit?: Users_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Users_wsInclude<ExtArgs> | null
    /**
     * The data needed to update a Users_ws.
     */
    data: XOR<Users_wsUpdateInput, Users_wsUncheckedUpdateInput>
    /**
     * Choose, which Users_ws to update.
     */
    where: Users_wsWhereUniqueInput
  }

  /**
   * Users_ws updateMany
   */
  export type Users_wsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users_ws.
     */
    data: XOR<Users_wsUpdateManyMutationInput, Users_wsUncheckedUpdateManyInput>
    /**
     * Filter which Users_ws to update
     */
    where?: Users_wsWhereInput
    /**
     * Limit how many Users_ws to update.
     */
    limit?: number
  }

  /**
   * Users_ws upsert
   */
  export type Users_wsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users_ws
     */
    select?: Users_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users_ws
     */
    omit?: Users_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Users_wsInclude<ExtArgs> | null
    /**
     * The filter to search for the Users_ws to update in case it exists.
     */
    where: Users_wsWhereUniqueInput
    /**
     * In case the Users_ws found by the `where` argument doesn't exist, create a new Users_ws with this data.
     */
    create: XOR<Users_wsCreateInput, Users_wsUncheckedCreateInput>
    /**
     * In case the Users_ws was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Users_wsUpdateInput, Users_wsUncheckedUpdateInput>
  }

  /**
   * Users_ws delete
   */
  export type Users_wsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users_ws
     */
    select?: Users_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users_ws
     */
    omit?: Users_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Users_wsInclude<ExtArgs> | null
    /**
     * Filter which Users_ws to delete.
     */
    where: Users_wsWhereUniqueInput
  }

  /**
   * Users_ws deleteMany
   */
  export type Users_wsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users_ws to delete
     */
    where?: Users_wsWhereInput
    /**
     * Limit how many Users_ws to delete.
     */
    limit?: number
  }

  /**
   * Users_ws.pet_ws
   */
  export type Users_ws$pet_wsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pets_ws
     */
    select?: Pets_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pets_ws
     */
    omit?: Pets_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Pets_wsInclude<ExtArgs> | null
    where?: Pets_wsWhereInput
    orderBy?: Pets_wsOrderByWithRelationInput | Pets_wsOrderByWithRelationInput[]
    cursor?: Pets_wsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Pets_wsScalarFieldEnum | Pets_wsScalarFieldEnum[]
  }

  /**
   * Users_ws without action
   */
  export type Users_wsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users_ws
     */
    select?: Users_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users_ws
     */
    omit?: Users_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Users_wsInclude<ExtArgs> | null
  }


  /**
   * Model Pets_ws
   */

  export type AggregatePets_ws = {
    _count: Pets_wsCountAggregateOutputType | null
    _avg: Pets_wsAvgAggregateOutputType | null
    _sum: Pets_wsSumAggregateOutputType | null
    _min: Pets_wsMinAggregateOutputType | null
    _max: Pets_wsMaxAggregateOutputType | null
  }

  export type Pets_wsAvgAggregateOutputType = {
    id_ws: number | null
    raceId_ws: number | null
    categoryId_ws: number | null
    genderId_ws: number | null
    userId_ws: number | null
    latitud_ws: number | null
    longitud_ws: number | null
  }

  export type Pets_wsSumAggregateOutputType = {
    id_ws: number | null
    raceId_ws: number | null
    categoryId_ws: number | null
    genderId_ws: number | null
    userId_ws: number | null
    latitud_ws: number | null
    longitud_ws: number | null
  }

  export type Pets_wsMinAggregateOutputType = {
    id_ws: number | null
    name_ws: string | null
    photo_ws: string | null
    estado_ws: $Enums.Estados_ws | null
    raceId_ws: number | null
    categoryId_ws: number | null
    genderId_ws: number | null
    userId_ws: number | null
    latitud_ws: number | null
    longitud_ws: number | null
  }

  export type Pets_wsMaxAggregateOutputType = {
    id_ws: number | null
    name_ws: string | null
    photo_ws: string | null
    estado_ws: $Enums.Estados_ws | null
    raceId_ws: number | null
    categoryId_ws: number | null
    genderId_ws: number | null
    userId_ws: number | null
    latitud_ws: number | null
    longitud_ws: number | null
  }

  export type Pets_wsCountAggregateOutputType = {
    id_ws: number
    name_ws: number
    photo_ws: number
    estado_ws: number
    raceId_ws: number
    categoryId_ws: number
    genderId_ws: number
    userId_ws: number
    latitud_ws: number
    longitud_ws: number
    _all: number
  }


  export type Pets_wsAvgAggregateInputType = {
    id_ws?: true
    raceId_ws?: true
    categoryId_ws?: true
    genderId_ws?: true
    userId_ws?: true
    latitud_ws?: true
    longitud_ws?: true
  }

  export type Pets_wsSumAggregateInputType = {
    id_ws?: true
    raceId_ws?: true
    categoryId_ws?: true
    genderId_ws?: true
    userId_ws?: true
    latitud_ws?: true
    longitud_ws?: true
  }

  export type Pets_wsMinAggregateInputType = {
    id_ws?: true
    name_ws?: true
    photo_ws?: true
    estado_ws?: true
    raceId_ws?: true
    categoryId_ws?: true
    genderId_ws?: true
    userId_ws?: true
    latitud_ws?: true
    longitud_ws?: true
  }

  export type Pets_wsMaxAggregateInputType = {
    id_ws?: true
    name_ws?: true
    photo_ws?: true
    estado_ws?: true
    raceId_ws?: true
    categoryId_ws?: true
    genderId_ws?: true
    userId_ws?: true
    latitud_ws?: true
    longitud_ws?: true
  }

  export type Pets_wsCountAggregateInputType = {
    id_ws?: true
    name_ws?: true
    photo_ws?: true
    estado_ws?: true
    raceId_ws?: true
    categoryId_ws?: true
    genderId_ws?: true
    userId_ws?: true
    latitud_ws?: true
    longitud_ws?: true
    _all?: true
  }

  export type Pets_wsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pets_ws to aggregate.
     */
    where?: Pets_wsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pets_ws to fetch.
     */
    orderBy?: Pets_wsOrderByWithRelationInput | Pets_wsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Pets_wsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pets_ws from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pets_ws.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Pets_ws
    **/
    _count?: true | Pets_wsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Pets_wsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Pets_wsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Pets_wsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Pets_wsMaxAggregateInputType
  }

  export type GetPets_wsAggregateType<T extends Pets_wsAggregateArgs> = {
        [P in keyof T & keyof AggregatePets_ws]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePets_ws[P]>
      : GetScalarType<T[P], AggregatePets_ws[P]>
  }




  export type Pets_wsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Pets_wsWhereInput
    orderBy?: Pets_wsOrderByWithAggregationInput | Pets_wsOrderByWithAggregationInput[]
    by: Pets_wsScalarFieldEnum[] | Pets_wsScalarFieldEnum
    having?: Pets_wsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Pets_wsCountAggregateInputType | true
    _avg?: Pets_wsAvgAggregateInputType
    _sum?: Pets_wsSumAggregateInputType
    _min?: Pets_wsMinAggregateInputType
    _max?: Pets_wsMaxAggregateInputType
  }

  export type Pets_wsGroupByOutputType = {
    id_ws: number
    name_ws: string | null
    photo_ws: string
    estado_ws: $Enums.Estados_ws
    raceId_ws: number
    categoryId_ws: number
    genderId_ws: number
    userId_ws: number
    latitud_ws: number | null
    longitud_ws: number | null
    _count: Pets_wsCountAggregateOutputType | null
    _avg: Pets_wsAvgAggregateOutputType | null
    _sum: Pets_wsSumAggregateOutputType | null
    _min: Pets_wsMinAggregateOutputType | null
    _max: Pets_wsMaxAggregateOutputType | null
  }

  type GetPets_wsGroupByPayload<T extends Pets_wsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Pets_wsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Pets_wsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Pets_wsGroupByOutputType[P]>
            : GetScalarType<T[P], Pets_wsGroupByOutputType[P]>
        }
      >
    >


  export type Pets_wsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_ws?: boolean
    name_ws?: boolean
    photo_ws?: boolean
    estado_ws?: boolean
    raceId_ws?: boolean
    categoryId_ws?: boolean
    genderId_ws?: boolean
    userId_ws?: boolean
    latitud_ws?: boolean
    longitud_ws?: boolean
    race_ws?: boolean | Races_wsDefaultArgs<ExtArgs>
    category_ws?: boolean | Categories_wsDefaultArgs<ExtArgs>
    gender_ws?: boolean | Genders_wsDefaultArgs<ExtArgs>
    user_ws?: boolean | Users_wsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pets_ws"]>



  export type Pets_wsSelectScalar = {
    id_ws?: boolean
    name_ws?: boolean
    photo_ws?: boolean
    estado_ws?: boolean
    raceId_ws?: boolean
    categoryId_ws?: boolean
    genderId_ws?: boolean
    userId_ws?: boolean
    latitud_ws?: boolean
    longitud_ws?: boolean
  }

  export type Pets_wsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_ws" | "name_ws" | "photo_ws" | "estado_ws" | "raceId_ws" | "categoryId_ws" | "genderId_ws" | "userId_ws" | "latitud_ws" | "longitud_ws", ExtArgs["result"]["pets_ws"]>
  export type Pets_wsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    race_ws?: boolean | Races_wsDefaultArgs<ExtArgs>
    category_ws?: boolean | Categories_wsDefaultArgs<ExtArgs>
    gender_ws?: boolean | Genders_wsDefaultArgs<ExtArgs>
    user_ws?: boolean | Users_wsDefaultArgs<ExtArgs>
  }

  export type $Pets_wsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Pets_ws"
    objects: {
      race_ws: Prisma.$Races_wsPayload<ExtArgs>
      category_ws: Prisma.$Categories_wsPayload<ExtArgs>
      gender_ws: Prisma.$Genders_wsPayload<ExtArgs>
      user_ws: Prisma.$Users_wsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_ws: number
      name_ws: string | null
      photo_ws: string
      estado_ws: $Enums.Estados_ws
      raceId_ws: number
      categoryId_ws: number
      genderId_ws: number
      userId_ws: number
      latitud_ws: number | null
      longitud_ws: number | null
    }, ExtArgs["result"]["pets_ws"]>
    composites: {}
  }

  type Pets_wsGetPayload<S extends boolean | null | undefined | Pets_wsDefaultArgs> = $Result.GetResult<Prisma.$Pets_wsPayload, S>

  type Pets_wsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<Pets_wsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Pets_wsCountAggregateInputType | true
    }

  export interface Pets_wsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Pets_ws'], meta: { name: 'Pets_ws' } }
    /**
     * Find zero or one Pets_ws that matches the filter.
     * @param {Pets_wsFindUniqueArgs} args - Arguments to find a Pets_ws
     * @example
     * // Get one Pets_ws
     * const pets_ws = await prisma.pets_ws.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Pets_wsFindUniqueArgs>(args: SelectSubset<T, Pets_wsFindUniqueArgs<ExtArgs>>): Prisma__Pets_wsClient<$Result.GetResult<Prisma.$Pets_wsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Pets_ws that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {Pets_wsFindUniqueOrThrowArgs} args - Arguments to find a Pets_ws
     * @example
     * // Get one Pets_ws
     * const pets_ws = await prisma.pets_ws.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Pets_wsFindUniqueOrThrowArgs>(args: SelectSubset<T, Pets_wsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Pets_wsClient<$Result.GetResult<Prisma.$Pets_wsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pets_ws that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Pets_wsFindFirstArgs} args - Arguments to find a Pets_ws
     * @example
     * // Get one Pets_ws
     * const pets_ws = await prisma.pets_ws.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Pets_wsFindFirstArgs>(args?: SelectSubset<T, Pets_wsFindFirstArgs<ExtArgs>>): Prisma__Pets_wsClient<$Result.GetResult<Prisma.$Pets_wsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pets_ws that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Pets_wsFindFirstOrThrowArgs} args - Arguments to find a Pets_ws
     * @example
     * // Get one Pets_ws
     * const pets_ws = await prisma.pets_ws.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Pets_wsFindFirstOrThrowArgs>(args?: SelectSubset<T, Pets_wsFindFirstOrThrowArgs<ExtArgs>>): Prisma__Pets_wsClient<$Result.GetResult<Prisma.$Pets_wsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Pets_ws that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Pets_wsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pets_ws
     * const pets_ws = await prisma.pets_ws.findMany()
     * 
     * // Get first 10 Pets_ws
     * const pets_ws = await prisma.pets_ws.findMany({ take: 10 })
     * 
     * // Only select the `id_ws`
     * const pets_wsWithId_wsOnly = await prisma.pets_ws.findMany({ select: { id_ws: true } })
     * 
     */
    findMany<T extends Pets_wsFindManyArgs>(args?: SelectSubset<T, Pets_wsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Pets_wsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Pets_ws.
     * @param {Pets_wsCreateArgs} args - Arguments to create a Pets_ws.
     * @example
     * // Create one Pets_ws
     * const Pets_ws = await prisma.pets_ws.create({
     *   data: {
     *     // ... data to create a Pets_ws
     *   }
     * })
     * 
     */
    create<T extends Pets_wsCreateArgs>(args: SelectSubset<T, Pets_wsCreateArgs<ExtArgs>>): Prisma__Pets_wsClient<$Result.GetResult<Prisma.$Pets_wsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Pets_ws.
     * @param {Pets_wsCreateManyArgs} args - Arguments to create many Pets_ws.
     * @example
     * // Create many Pets_ws
     * const pets_ws = await prisma.pets_ws.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Pets_wsCreateManyArgs>(args?: SelectSubset<T, Pets_wsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Pets_ws.
     * @param {Pets_wsDeleteArgs} args - Arguments to delete one Pets_ws.
     * @example
     * // Delete one Pets_ws
     * const Pets_ws = await prisma.pets_ws.delete({
     *   where: {
     *     // ... filter to delete one Pets_ws
     *   }
     * })
     * 
     */
    delete<T extends Pets_wsDeleteArgs>(args: SelectSubset<T, Pets_wsDeleteArgs<ExtArgs>>): Prisma__Pets_wsClient<$Result.GetResult<Prisma.$Pets_wsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Pets_ws.
     * @param {Pets_wsUpdateArgs} args - Arguments to update one Pets_ws.
     * @example
     * // Update one Pets_ws
     * const pets_ws = await prisma.pets_ws.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Pets_wsUpdateArgs>(args: SelectSubset<T, Pets_wsUpdateArgs<ExtArgs>>): Prisma__Pets_wsClient<$Result.GetResult<Prisma.$Pets_wsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Pets_ws.
     * @param {Pets_wsDeleteManyArgs} args - Arguments to filter Pets_ws to delete.
     * @example
     * // Delete a few Pets_ws
     * const { count } = await prisma.pets_ws.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Pets_wsDeleteManyArgs>(args?: SelectSubset<T, Pets_wsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pets_ws.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Pets_wsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pets_ws
     * const pets_ws = await prisma.pets_ws.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Pets_wsUpdateManyArgs>(args: SelectSubset<T, Pets_wsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Pets_ws.
     * @param {Pets_wsUpsertArgs} args - Arguments to update or create a Pets_ws.
     * @example
     * // Update or create a Pets_ws
     * const pets_ws = await prisma.pets_ws.upsert({
     *   create: {
     *     // ... data to create a Pets_ws
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pets_ws we want to update
     *   }
     * })
     */
    upsert<T extends Pets_wsUpsertArgs>(args: SelectSubset<T, Pets_wsUpsertArgs<ExtArgs>>): Prisma__Pets_wsClient<$Result.GetResult<Prisma.$Pets_wsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Pets_ws.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Pets_wsCountArgs} args - Arguments to filter Pets_ws to count.
     * @example
     * // Count the number of Pets_ws
     * const count = await prisma.pets_ws.count({
     *   where: {
     *     // ... the filter for the Pets_ws we want to count
     *   }
     * })
    **/
    count<T extends Pets_wsCountArgs>(
      args?: Subset<T, Pets_wsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Pets_wsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pets_ws.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Pets_wsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Pets_wsAggregateArgs>(args: Subset<T, Pets_wsAggregateArgs>): Prisma.PrismaPromise<GetPets_wsAggregateType<T>>

    /**
     * Group by Pets_ws.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Pets_wsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Pets_wsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Pets_wsGroupByArgs['orderBy'] }
        : { orderBy?: Pets_wsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Pets_wsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPets_wsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Pets_ws model
   */
  readonly fields: Pets_wsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Pets_ws.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Pets_wsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    race_ws<T extends Races_wsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Races_wsDefaultArgs<ExtArgs>>): Prisma__Races_wsClient<$Result.GetResult<Prisma.$Races_wsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    category_ws<T extends Categories_wsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Categories_wsDefaultArgs<ExtArgs>>): Prisma__Categories_wsClient<$Result.GetResult<Prisma.$Categories_wsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    gender_ws<T extends Genders_wsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Genders_wsDefaultArgs<ExtArgs>>): Prisma__Genders_wsClient<$Result.GetResult<Prisma.$Genders_wsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user_ws<T extends Users_wsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, Users_wsDefaultArgs<ExtArgs>>): Prisma__Users_wsClient<$Result.GetResult<Prisma.$Users_wsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Pets_ws model
   */
  interface Pets_wsFieldRefs {
    readonly id_ws: FieldRef<"Pets_ws", 'Int'>
    readonly name_ws: FieldRef<"Pets_ws", 'String'>
    readonly photo_ws: FieldRef<"Pets_ws", 'String'>
    readonly estado_ws: FieldRef<"Pets_ws", 'Estados_ws'>
    readonly raceId_ws: FieldRef<"Pets_ws", 'Int'>
    readonly categoryId_ws: FieldRef<"Pets_ws", 'Int'>
    readonly genderId_ws: FieldRef<"Pets_ws", 'Int'>
    readonly userId_ws: FieldRef<"Pets_ws", 'Int'>
    readonly latitud_ws: FieldRef<"Pets_ws", 'Float'>
    readonly longitud_ws: FieldRef<"Pets_ws", 'Float'>
  }
    

  // Custom InputTypes
  /**
   * Pets_ws findUnique
   */
  export type Pets_wsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pets_ws
     */
    select?: Pets_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pets_ws
     */
    omit?: Pets_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Pets_wsInclude<ExtArgs> | null
    /**
     * Filter, which Pets_ws to fetch.
     */
    where: Pets_wsWhereUniqueInput
  }

  /**
   * Pets_ws findUniqueOrThrow
   */
  export type Pets_wsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pets_ws
     */
    select?: Pets_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pets_ws
     */
    omit?: Pets_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Pets_wsInclude<ExtArgs> | null
    /**
     * Filter, which Pets_ws to fetch.
     */
    where: Pets_wsWhereUniqueInput
  }

  /**
   * Pets_ws findFirst
   */
  export type Pets_wsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pets_ws
     */
    select?: Pets_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pets_ws
     */
    omit?: Pets_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Pets_wsInclude<ExtArgs> | null
    /**
     * Filter, which Pets_ws to fetch.
     */
    where?: Pets_wsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pets_ws to fetch.
     */
    orderBy?: Pets_wsOrderByWithRelationInput | Pets_wsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pets_ws.
     */
    cursor?: Pets_wsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pets_ws from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pets_ws.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pets_ws.
     */
    distinct?: Pets_wsScalarFieldEnum | Pets_wsScalarFieldEnum[]
  }

  /**
   * Pets_ws findFirstOrThrow
   */
  export type Pets_wsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pets_ws
     */
    select?: Pets_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pets_ws
     */
    omit?: Pets_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Pets_wsInclude<ExtArgs> | null
    /**
     * Filter, which Pets_ws to fetch.
     */
    where?: Pets_wsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pets_ws to fetch.
     */
    orderBy?: Pets_wsOrderByWithRelationInput | Pets_wsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pets_ws.
     */
    cursor?: Pets_wsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pets_ws from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pets_ws.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pets_ws.
     */
    distinct?: Pets_wsScalarFieldEnum | Pets_wsScalarFieldEnum[]
  }

  /**
   * Pets_ws findMany
   */
  export type Pets_wsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pets_ws
     */
    select?: Pets_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pets_ws
     */
    omit?: Pets_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Pets_wsInclude<ExtArgs> | null
    /**
     * Filter, which Pets_ws to fetch.
     */
    where?: Pets_wsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pets_ws to fetch.
     */
    orderBy?: Pets_wsOrderByWithRelationInput | Pets_wsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Pets_ws.
     */
    cursor?: Pets_wsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pets_ws from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pets_ws.
     */
    skip?: number
    distinct?: Pets_wsScalarFieldEnum | Pets_wsScalarFieldEnum[]
  }

  /**
   * Pets_ws create
   */
  export type Pets_wsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pets_ws
     */
    select?: Pets_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pets_ws
     */
    omit?: Pets_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Pets_wsInclude<ExtArgs> | null
    /**
     * The data needed to create a Pets_ws.
     */
    data: XOR<Pets_wsCreateInput, Pets_wsUncheckedCreateInput>
  }

  /**
   * Pets_ws createMany
   */
  export type Pets_wsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Pets_ws.
     */
    data: Pets_wsCreateManyInput | Pets_wsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Pets_ws update
   */
  export type Pets_wsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pets_ws
     */
    select?: Pets_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pets_ws
     */
    omit?: Pets_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Pets_wsInclude<ExtArgs> | null
    /**
     * The data needed to update a Pets_ws.
     */
    data: XOR<Pets_wsUpdateInput, Pets_wsUncheckedUpdateInput>
    /**
     * Choose, which Pets_ws to update.
     */
    where: Pets_wsWhereUniqueInput
  }

  /**
   * Pets_ws updateMany
   */
  export type Pets_wsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Pets_ws.
     */
    data: XOR<Pets_wsUpdateManyMutationInput, Pets_wsUncheckedUpdateManyInput>
    /**
     * Filter which Pets_ws to update
     */
    where?: Pets_wsWhereInput
    /**
     * Limit how many Pets_ws to update.
     */
    limit?: number
  }

  /**
   * Pets_ws upsert
   */
  export type Pets_wsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pets_ws
     */
    select?: Pets_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pets_ws
     */
    omit?: Pets_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Pets_wsInclude<ExtArgs> | null
    /**
     * The filter to search for the Pets_ws to update in case it exists.
     */
    where: Pets_wsWhereUniqueInput
    /**
     * In case the Pets_ws found by the `where` argument doesn't exist, create a new Pets_ws with this data.
     */
    create: XOR<Pets_wsCreateInput, Pets_wsUncheckedCreateInput>
    /**
     * In case the Pets_ws was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Pets_wsUpdateInput, Pets_wsUncheckedUpdateInput>
  }

  /**
   * Pets_ws delete
   */
  export type Pets_wsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pets_ws
     */
    select?: Pets_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pets_ws
     */
    omit?: Pets_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Pets_wsInclude<ExtArgs> | null
    /**
     * Filter which Pets_ws to delete.
     */
    where: Pets_wsWhereUniqueInput
  }

  /**
   * Pets_ws deleteMany
   */
  export type Pets_wsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pets_ws to delete
     */
    where?: Pets_wsWhereInput
    /**
     * Limit how many Pets_ws to delete.
     */
    limit?: number
  }

  /**
   * Pets_ws without action
   */
  export type Pets_wsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pets_ws
     */
    select?: Pets_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pets_ws
     */
    omit?: Pets_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Pets_wsInclude<ExtArgs> | null
  }


  /**
   * Model Races_ws
   */

  export type AggregateRaces_ws = {
    _count: Races_wsCountAggregateOutputType | null
    _avg: Races_wsAvgAggregateOutputType | null
    _sum: Races_wsSumAggregateOutputType | null
    _min: Races_wsMinAggregateOutputType | null
    _max: Races_wsMaxAggregateOutputType | null
  }

  export type Races_wsAvgAggregateOutputType = {
    id_ws: number | null
  }

  export type Races_wsSumAggregateOutputType = {
    id_ws: number | null
  }

  export type Races_wsMinAggregateOutputType = {
    id_ws: number | null
    name_ws: string | null
  }

  export type Races_wsMaxAggregateOutputType = {
    id_ws: number | null
    name_ws: string | null
  }

  export type Races_wsCountAggregateOutputType = {
    id_ws: number
    name_ws: number
    _all: number
  }


  export type Races_wsAvgAggregateInputType = {
    id_ws?: true
  }

  export type Races_wsSumAggregateInputType = {
    id_ws?: true
  }

  export type Races_wsMinAggregateInputType = {
    id_ws?: true
    name_ws?: true
  }

  export type Races_wsMaxAggregateInputType = {
    id_ws?: true
    name_ws?: true
  }

  export type Races_wsCountAggregateInputType = {
    id_ws?: true
    name_ws?: true
    _all?: true
  }

  export type Races_wsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Races_ws to aggregate.
     */
    where?: Races_wsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Races_ws to fetch.
     */
    orderBy?: Races_wsOrderByWithRelationInput | Races_wsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Races_wsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Races_ws from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Races_ws.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Races_ws
    **/
    _count?: true | Races_wsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Races_wsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Races_wsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Races_wsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Races_wsMaxAggregateInputType
  }

  export type GetRaces_wsAggregateType<T extends Races_wsAggregateArgs> = {
        [P in keyof T & keyof AggregateRaces_ws]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRaces_ws[P]>
      : GetScalarType<T[P], AggregateRaces_ws[P]>
  }




  export type Races_wsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Races_wsWhereInput
    orderBy?: Races_wsOrderByWithAggregationInput | Races_wsOrderByWithAggregationInput[]
    by: Races_wsScalarFieldEnum[] | Races_wsScalarFieldEnum
    having?: Races_wsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Races_wsCountAggregateInputType | true
    _avg?: Races_wsAvgAggregateInputType
    _sum?: Races_wsSumAggregateInputType
    _min?: Races_wsMinAggregateInputType
    _max?: Races_wsMaxAggregateInputType
  }

  export type Races_wsGroupByOutputType = {
    id_ws: number
    name_ws: string
    _count: Races_wsCountAggregateOutputType | null
    _avg: Races_wsAvgAggregateOutputType | null
    _sum: Races_wsSumAggregateOutputType | null
    _min: Races_wsMinAggregateOutputType | null
    _max: Races_wsMaxAggregateOutputType | null
  }

  type GetRaces_wsGroupByPayload<T extends Races_wsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Races_wsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Races_wsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Races_wsGroupByOutputType[P]>
            : GetScalarType<T[P], Races_wsGroupByOutputType[P]>
        }
      >
    >


  export type Races_wsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_ws?: boolean
    name_ws?: boolean
    pet_ws?: boolean | Races_ws$pet_wsArgs<ExtArgs>
    _count?: boolean | Races_wsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["races_ws"]>



  export type Races_wsSelectScalar = {
    id_ws?: boolean
    name_ws?: boolean
  }

  export type Races_wsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_ws" | "name_ws", ExtArgs["result"]["races_ws"]>
  export type Races_wsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pet_ws?: boolean | Races_ws$pet_wsArgs<ExtArgs>
    _count?: boolean | Races_wsCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $Races_wsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Races_ws"
    objects: {
      pet_ws: Prisma.$Pets_wsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_ws: number
      name_ws: string
    }, ExtArgs["result"]["races_ws"]>
    composites: {}
  }

  type Races_wsGetPayload<S extends boolean | null | undefined | Races_wsDefaultArgs> = $Result.GetResult<Prisma.$Races_wsPayload, S>

  type Races_wsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<Races_wsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Races_wsCountAggregateInputType | true
    }

  export interface Races_wsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Races_ws'], meta: { name: 'Races_ws' } }
    /**
     * Find zero or one Races_ws that matches the filter.
     * @param {Races_wsFindUniqueArgs} args - Arguments to find a Races_ws
     * @example
     * // Get one Races_ws
     * const races_ws = await prisma.races_ws.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Races_wsFindUniqueArgs>(args: SelectSubset<T, Races_wsFindUniqueArgs<ExtArgs>>): Prisma__Races_wsClient<$Result.GetResult<Prisma.$Races_wsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Races_ws that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {Races_wsFindUniqueOrThrowArgs} args - Arguments to find a Races_ws
     * @example
     * // Get one Races_ws
     * const races_ws = await prisma.races_ws.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Races_wsFindUniqueOrThrowArgs>(args: SelectSubset<T, Races_wsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Races_wsClient<$Result.GetResult<Prisma.$Races_wsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Races_ws that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Races_wsFindFirstArgs} args - Arguments to find a Races_ws
     * @example
     * // Get one Races_ws
     * const races_ws = await prisma.races_ws.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Races_wsFindFirstArgs>(args?: SelectSubset<T, Races_wsFindFirstArgs<ExtArgs>>): Prisma__Races_wsClient<$Result.GetResult<Prisma.$Races_wsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Races_ws that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Races_wsFindFirstOrThrowArgs} args - Arguments to find a Races_ws
     * @example
     * // Get one Races_ws
     * const races_ws = await prisma.races_ws.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Races_wsFindFirstOrThrowArgs>(args?: SelectSubset<T, Races_wsFindFirstOrThrowArgs<ExtArgs>>): Prisma__Races_wsClient<$Result.GetResult<Prisma.$Races_wsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Races_ws that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Races_wsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Races_ws
     * const races_ws = await prisma.races_ws.findMany()
     * 
     * // Get first 10 Races_ws
     * const races_ws = await prisma.races_ws.findMany({ take: 10 })
     * 
     * // Only select the `id_ws`
     * const races_wsWithId_wsOnly = await prisma.races_ws.findMany({ select: { id_ws: true } })
     * 
     */
    findMany<T extends Races_wsFindManyArgs>(args?: SelectSubset<T, Races_wsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Races_wsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Races_ws.
     * @param {Races_wsCreateArgs} args - Arguments to create a Races_ws.
     * @example
     * // Create one Races_ws
     * const Races_ws = await prisma.races_ws.create({
     *   data: {
     *     // ... data to create a Races_ws
     *   }
     * })
     * 
     */
    create<T extends Races_wsCreateArgs>(args: SelectSubset<T, Races_wsCreateArgs<ExtArgs>>): Prisma__Races_wsClient<$Result.GetResult<Prisma.$Races_wsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Races_ws.
     * @param {Races_wsCreateManyArgs} args - Arguments to create many Races_ws.
     * @example
     * // Create many Races_ws
     * const races_ws = await prisma.races_ws.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Races_wsCreateManyArgs>(args?: SelectSubset<T, Races_wsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Races_ws.
     * @param {Races_wsDeleteArgs} args - Arguments to delete one Races_ws.
     * @example
     * // Delete one Races_ws
     * const Races_ws = await prisma.races_ws.delete({
     *   where: {
     *     // ... filter to delete one Races_ws
     *   }
     * })
     * 
     */
    delete<T extends Races_wsDeleteArgs>(args: SelectSubset<T, Races_wsDeleteArgs<ExtArgs>>): Prisma__Races_wsClient<$Result.GetResult<Prisma.$Races_wsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Races_ws.
     * @param {Races_wsUpdateArgs} args - Arguments to update one Races_ws.
     * @example
     * // Update one Races_ws
     * const races_ws = await prisma.races_ws.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Races_wsUpdateArgs>(args: SelectSubset<T, Races_wsUpdateArgs<ExtArgs>>): Prisma__Races_wsClient<$Result.GetResult<Prisma.$Races_wsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Races_ws.
     * @param {Races_wsDeleteManyArgs} args - Arguments to filter Races_ws to delete.
     * @example
     * // Delete a few Races_ws
     * const { count } = await prisma.races_ws.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Races_wsDeleteManyArgs>(args?: SelectSubset<T, Races_wsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Races_ws.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Races_wsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Races_ws
     * const races_ws = await prisma.races_ws.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Races_wsUpdateManyArgs>(args: SelectSubset<T, Races_wsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Races_ws.
     * @param {Races_wsUpsertArgs} args - Arguments to update or create a Races_ws.
     * @example
     * // Update or create a Races_ws
     * const races_ws = await prisma.races_ws.upsert({
     *   create: {
     *     // ... data to create a Races_ws
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Races_ws we want to update
     *   }
     * })
     */
    upsert<T extends Races_wsUpsertArgs>(args: SelectSubset<T, Races_wsUpsertArgs<ExtArgs>>): Prisma__Races_wsClient<$Result.GetResult<Prisma.$Races_wsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Races_ws.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Races_wsCountArgs} args - Arguments to filter Races_ws to count.
     * @example
     * // Count the number of Races_ws
     * const count = await prisma.races_ws.count({
     *   where: {
     *     // ... the filter for the Races_ws we want to count
     *   }
     * })
    **/
    count<T extends Races_wsCountArgs>(
      args?: Subset<T, Races_wsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Races_wsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Races_ws.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Races_wsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Races_wsAggregateArgs>(args: Subset<T, Races_wsAggregateArgs>): Prisma.PrismaPromise<GetRaces_wsAggregateType<T>>

    /**
     * Group by Races_ws.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Races_wsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Races_wsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Races_wsGroupByArgs['orderBy'] }
        : { orderBy?: Races_wsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Races_wsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRaces_wsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Races_ws model
   */
  readonly fields: Races_wsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Races_ws.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Races_wsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pet_ws<T extends Races_ws$pet_wsArgs<ExtArgs> = {}>(args?: Subset<T, Races_ws$pet_wsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Pets_wsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Races_ws model
   */
  interface Races_wsFieldRefs {
    readonly id_ws: FieldRef<"Races_ws", 'Int'>
    readonly name_ws: FieldRef<"Races_ws", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Races_ws findUnique
   */
  export type Races_wsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Races_ws
     */
    select?: Races_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Races_ws
     */
    omit?: Races_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Races_wsInclude<ExtArgs> | null
    /**
     * Filter, which Races_ws to fetch.
     */
    where: Races_wsWhereUniqueInput
  }

  /**
   * Races_ws findUniqueOrThrow
   */
  export type Races_wsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Races_ws
     */
    select?: Races_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Races_ws
     */
    omit?: Races_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Races_wsInclude<ExtArgs> | null
    /**
     * Filter, which Races_ws to fetch.
     */
    where: Races_wsWhereUniqueInput
  }

  /**
   * Races_ws findFirst
   */
  export type Races_wsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Races_ws
     */
    select?: Races_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Races_ws
     */
    omit?: Races_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Races_wsInclude<ExtArgs> | null
    /**
     * Filter, which Races_ws to fetch.
     */
    where?: Races_wsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Races_ws to fetch.
     */
    orderBy?: Races_wsOrderByWithRelationInput | Races_wsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Races_ws.
     */
    cursor?: Races_wsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Races_ws from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Races_ws.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Races_ws.
     */
    distinct?: Races_wsScalarFieldEnum | Races_wsScalarFieldEnum[]
  }

  /**
   * Races_ws findFirstOrThrow
   */
  export type Races_wsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Races_ws
     */
    select?: Races_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Races_ws
     */
    omit?: Races_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Races_wsInclude<ExtArgs> | null
    /**
     * Filter, which Races_ws to fetch.
     */
    where?: Races_wsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Races_ws to fetch.
     */
    orderBy?: Races_wsOrderByWithRelationInput | Races_wsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Races_ws.
     */
    cursor?: Races_wsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Races_ws from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Races_ws.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Races_ws.
     */
    distinct?: Races_wsScalarFieldEnum | Races_wsScalarFieldEnum[]
  }

  /**
   * Races_ws findMany
   */
  export type Races_wsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Races_ws
     */
    select?: Races_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Races_ws
     */
    omit?: Races_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Races_wsInclude<ExtArgs> | null
    /**
     * Filter, which Races_ws to fetch.
     */
    where?: Races_wsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Races_ws to fetch.
     */
    orderBy?: Races_wsOrderByWithRelationInput | Races_wsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Races_ws.
     */
    cursor?: Races_wsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Races_ws from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Races_ws.
     */
    skip?: number
    distinct?: Races_wsScalarFieldEnum | Races_wsScalarFieldEnum[]
  }

  /**
   * Races_ws create
   */
  export type Races_wsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Races_ws
     */
    select?: Races_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Races_ws
     */
    omit?: Races_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Races_wsInclude<ExtArgs> | null
    /**
     * The data needed to create a Races_ws.
     */
    data: XOR<Races_wsCreateInput, Races_wsUncheckedCreateInput>
  }

  /**
   * Races_ws createMany
   */
  export type Races_wsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Races_ws.
     */
    data: Races_wsCreateManyInput | Races_wsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Races_ws update
   */
  export type Races_wsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Races_ws
     */
    select?: Races_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Races_ws
     */
    omit?: Races_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Races_wsInclude<ExtArgs> | null
    /**
     * The data needed to update a Races_ws.
     */
    data: XOR<Races_wsUpdateInput, Races_wsUncheckedUpdateInput>
    /**
     * Choose, which Races_ws to update.
     */
    where: Races_wsWhereUniqueInput
  }

  /**
   * Races_ws updateMany
   */
  export type Races_wsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Races_ws.
     */
    data: XOR<Races_wsUpdateManyMutationInput, Races_wsUncheckedUpdateManyInput>
    /**
     * Filter which Races_ws to update
     */
    where?: Races_wsWhereInput
    /**
     * Limit how many Races_ws to update.
     */
    limit?: number
  }

  /**
   * Races_ws upsert
   */
  export type Races_wsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Races_ws
     */
    select?: Races_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Races_ws
     */
    omit?: Races_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Races_wsInclude<ExtArgs> | null
    /**
     * The filter to search for the Races_ws to update in case it exists.
     */
    where: Races_wsWhereUniqueInput
    /**
     * In case the Races_ws found by the `where` argument doesn't exist, create a new Races_ws with this data.
     */
    create: XOR<Races_wsCreateInput, Races_wsUncheckedCreateInput>
    /**
     * In case the Races_ws was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Races_wsUpdateInput, Races_wsUncheckedUpdateInput>
  }

  /**
   * Races_ws delete
   */
  export type Races_wsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Races_ws
     */
    select?: Races_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Races_ws
     */
    omit?: Races_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Races_wsInclude<ExtArgs> | null
    /**
     * Filter which Races_ws to delete.
     */
    where: Races_wsWhereUniqueInput
  }

  /**
   * Races_ws deleteMany
   */
  export type Races_wsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Races_ws to delete
     */
    where?: Races_wsWhereInput
    /**
     * Limit how many Races_ws to delete.
     */
    limit?: number
  }

  /**
   * Races_ws.pet_ws
   */
  export type Races_ws$pet_wsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pets_ws
     */
    select?: Pets_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pets_ws
     */
    omit?: Pets_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Pets_wsInclude<ExtArgs> | null
    where?: Pets_wsWhereInput
    orderBy?: Pets_wsOrderByWithRelationInput | Pets_wsOrderByWithRelationInput[]
    cursor?: Pets_wsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Pets_wsScalarFieldEnum | Pets_wsScalarFieldEnum[]
  }

  /**
   * Races_ws without action
   */
  export type Races_wsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Races_ws
     */
    select?: Races_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Races_ws
     */
    omit?: Races_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Races_wsInclude<ExtArgs> | null
  }


  /**
   * Model Categories_ws
   */

  export type AggregateCategories_ws = {
    _count: Categories_wsCountAggregateOutputType | null
    _avg: Categories_wsAvgAggregateOutputType | null
    _sum: Categories_wsSumAggregateOutputType | null
    _min: Categories_wsMinAggregateOutputType | null
    _max: Categories_wsMaxAggregateOutputType | null
  }

  export type Categories_wsAvgAggregateOutputType = {
    id_ws: number | null
  }

  export type Categories_wsSumAggregateOutputType = {
    id_ws: number | null
  }

  export type Categories_wsMinAggregateOutputType = {
    id_ws: number | null
    name_ws: string | null
  }

  export type Categories_wsMaxAggregateOutputType = {
    id_ws: number | null
    name_ws: string | null
  }

  export type Categories_wsCountAggregateOutputType = {
    id_ws: number
    name_ws: number
    _all: number
  }


  export type Categories_wsAvgAggregateInputType = {
    id_ws?: true
  }

  export type Categories_wsSumAggregateInputType = {
    id_ws?: true
  }

  export type Categories_wsMinAggregateInputType = {
    id_ws?: true
    name_ws?: true
  }

  export type Categories_wsMaxAggregateInputType = {
    id_ws?: true
    name_ws?: true
  }

  export type Categories_wsCountAggregateInputType = {
    id_ws?: true
    name_ws?: true
    _all?: true
  }

  export type Categories_wsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Categories_ws to aggregate.
     */
    where?: Categories_wsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories_ws to fetch.
     */
    orderBy?: Categories_wsOrderByWithRelationInput | Categories_wsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Categories_wsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories_ws from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories_ws.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Categories_ws
    **/
    _count?: true | Categories_wsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Categories_wsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Categories_wsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Categories_wsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Categories_wsMaxAggregateInputType
  }

  export type GetCategories_wsAggregateType<T extends Categories_wsAggregateArgs> = {
        [P in keyof T & keyof AggregateCategories_ws]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategories_ws[P]>
      : GetScalarType<T[P], AggregateCategories_ws[P]>
  }




  export type Categories_wsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Categories_wsWhereInput
    orderBy?: Categories_wsOrderByWithAggregationInput | Categories_wsOrderByWithAggregationInput[]
    by: Categories_wsScalarFieldEnum[] | Categories_wsScalarFieldEnum
    having?: Categories_wsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Categories_wsCountAggregateInputType | true
    _avg?: Categories_wsAvgAggregateInputType
    _sum?: Categories_wsSumAggregateInputType
    _min?: Categories_wsMinAggregateInputType
    _max?: Categories_wsMaxAggregateInputType
  }

  export type Categories_wsGroupByOutputType = {
    id_ws: number
    name_ws: string
    _count: Categories_wsCountAggregateOutputType | null
    _avg: Categories_wsAvgAggregateOutputType | null
    _sum: Categories_wsSumAggregateOutputType | null
    _min: Categories_wsMinAggregateOutputType | null
    _max: Categories_wsMaxAggregateOutputType | null
  }

  type GetCategories_wsGroupByPayload<T extends Categories_wsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Categories_wsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Categories_wsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Categories_wsGroupByOutputType[P]>
            : GetScalarType<T[P], Categories_wsGroupByOutputType[P]>
        }
      >
    >


  export type Categories_wsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_ws?: boolean
    name_ws?: boolean
    pet_ws?: boolean | Categories_ws$pet_wsArgs<ExtArgs>
    _count?: boolean | Categories_wsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["categories_ws"]>



  export type Categories_wsSelectScalar = {
    id_ws?: boolean
    name_ws?: boolean
  }

  export type Categories_wsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_ws" | "name_ws", ExtArgs["result"]["categories_ws"]>
  export type Categories_wsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pet_ws?: boolean | Categories_ws$pet_wsArgs<ExtArgs>
    _count?: boolean | Categories_wsCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $Categories_wsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Categories_ws"
    objects: {
      pet_ws: Prisma.$Pets_wsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_ws: number
      name_ws: string
    }, ExtArgs["result"]["categories_ws"]>
    composites: {}
  }

  type Categories_wsGetPayload<S extends boolean | null | undefined | Categories_wsDefaultArgs> = $Result.GetResult<Prisma.$Categories_wsPayload, S>

  type Categories_wsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<Categories_wsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Categories_wsCountAggregateInputType | true
    }

  export interface Categories_wsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Categories_ws'], meta: { name: 'Categories_ws' } }
    /**
     * Find zero or one Categories_ws that matches the filter.
     * @param {Categories_wsFindUniqueArgs} args - Arguments to find a Categories_ws
     * @example
     * // Get one Categories_ws
     * const categories_ws = await prisma.categories_ws.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Categories_wsFindUniqueArgs>(args: SelectSubset<T, Categories_wsFindUniqueArgs<ExtArgs>>): Prisma__Categories_wsClient<$Result.GetResult<Prisma.$Categories_wsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Categories_ws that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {Categories_wsFindUniqueOrThrowArgs} args - Arguments to find a Categories_ws
     * @example
     * // Get one Categories_ws
     * const categories_ws = await prisma.categories_ws.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Categories_wsFindUniqueOrThrowArgs>(args: SelectSubset<T, Categories_wsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Categories_wsClient<$Result.GetResult<Prisma.$Categories_wsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Categories_ws that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Categories_wsFindFirstArgs} args - Arguments to find a Categories_ws
     * @example
     * // Get one Categories_ws
     * const categories_ws = await prisma.categories_ws.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Categories_wsFindFirstArgs>(args?: SelectSubset<T, Categories_wsFindFirstArgs<ExtArgs>>): Prisma__Categories_wsClient<$Result.GetResult<Prisma.$Categories_wsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Categories_ws that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Categories_wsFindFirstOrThrowArgs} args - Arguments to find a Categories_ws
     * @example
     * // Get one Categories_ws
     * const categories_ws = await prisma.categories_ws.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Categories_wsFindFirstOrThrowArgs>(args?: SelectSubset<T, Categories_wsFindFirstOrThrowArgs<ExtArgs>>): Prisma__Categories_wsClient<$Result.GetResult<Prisma.$Categories_wsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Categories_ws that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Categories_wsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categories_ws
     * const categories_ws = await prisma.categories_ws.findMany()
     * 
     * // Get first 10 Categories_ws
     * const categories_ws = await prisma.categories_ws.findMany({ take: 10 })
     * 
     * // Only select the `id_ws`
     * const categories_wsWithId_wsOnly = await prisma.categories_ws.findMany({ select: { id_ws: true } })
     * 
     */
    findMany<T extends Categories_wsFindManyArgs>(args?: SelectSubset<T, Categories_wsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Categories_wsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Categories_ws.
     * @param {Categories_wsCreateArgs} args - Arguments to create a Categories_ws.
     * @example
     * // Create one Categories_ws
     * const Categories_ws = await prisma.categories_ws.create({
     *   data: {
     *     // ... data to create a Categories_ws
     *   }
     * })
     * 
     */
    create<T extends Categories_wsCreateArgs>(args: SelectSubset<T, Categories_wsCreateArgs<ExtArgs>>): Prisma__Categories_wsClient<$Result.GetResult<Prisma.$Categories_wsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Categories_ws.
     * @param {Categories_wsCreateManyArgs} args - Arguments to create many Categories_ws.
     * @example
     * // Create many Categories_ws
     * const categories_ws = await prisma.categories_ws.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Categories_wsCreateManyArgs>(args?: SelectSubset<T, Categories_wsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Categories_ws.
     * @param {Categories_wsDeleteArgs} args - Arguments to delete one Categories_ws.
     * @example
     * // Delete one Categories_ws
     * const Categories_ws = await prisma.categories_ws.delete({
     *   where: {
     *     // ... filter to delete one Categories_ws
     *   }
     * })
     * 
     */
    delete<T extends Categories_wsDeleteArgs>(args: SelectSubset<T, Categories_wsDeleteArgs<ExtArgs>>): Prisma__Categories_wsClient<$Result.GetResult<Prisma.$Categories_wsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Categories_ws.
     * @param {Categories_wsUpdateArgs} args - Arguments to update one Categories_ws.
     * @example
     * // Update one Categories_ws
     * const categories_ws = await prisma.categories_ws.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Categories_wsUpdateArgs>(args: SelectSubset<T, Categories_wsUpdateArgs<ExtArgs>>): Prisma__Categories_wsClient<$Result.GetResult<Prisma.$Categories_wsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Categories_ws.
     * @param {Categories_wsDeleteManyArgs} args - Arguments to filter Categories_ws to delete.
     * @example
     * // Delete a few Categories_ws
     * const { count } = await prisma.categories_ws.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Categories_wsDeleteManyArgs>(args?: SelectSubset<T, Categories_wsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categories_ws.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Categories_wsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categories_ws
     * const categories_ws = await prisma.categories_ws.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Categories_wsUpdateManyArgs>(args: SelectSubset<T, Categories_wsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Categories_ws.
     * @param {Categories_wsUpsertArgs} args - Arguments to update or create a Categories_ws.
     * @example
     * // Update or create a Categories_ws
     * const categories_ws = await prisma.categories_ws.upsert({
     *   create: {
     *     // ... data to create a Categories_ws
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Categories_ws we want to update
     *   }
     * })
     */
    upsert<T extends Categories_wsUpsertArgs>(args: SelectSubset<T, Categories_wsUpsertArgs<ExtArgs>>): Prisma__Categories_wsClient<$Result.GetResult<Prisma.$Categories_wsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Categories_ws.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Categories_wsCountArgs} args - Arguments to filter Categories_ws to count.
     * @example
     * // Count the number of Categories_ws
     * const count = await prisma.categories_ws.count({
     *   where: {
     *     // ... the filter for the Categories_ws we want to count
     *   }
     * })
    **/
    count<T extends Categories_wsCountArgs>(
      args?: Subset<T, Categories_wsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Categories_wsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Categories_ws.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Categories_wsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Categories_wsAggregateArgs>(args: Subset<T, Categories_wsAggregateArgs>): Prisma.PrismaPromise<GetCategories_wsAggregateType<T>>

    /**
     * Group by Categories_ws.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Categories_wsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Categories_wsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Categories_wsGroupByArgs['orderBy'] }
        : { orderBy?: Categories_wsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Categories_wsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategories_wsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Categories_ws model
   */
  readonly fields: Categories_wsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Categories_ws.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Categories_wsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pet_ws<T extends Categories_ws$pet_wsArgs<ExtArgs> = {}>(args?: Subset<T, Categories_ws$pet_wsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Pets_wsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Categories_ws model
   */
  interface Categories_wsFieldRefs {
    readonly id_ws: FieldRef<"Categories_ws", 'Int'>
    readonly name_ws: FieldRef<"Categories_ws", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Categories_ws findUnique
   */
  export type Categories_wsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categories_ws
     */
    select?: Categories_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categories_ws
     */
    omit?: Categories_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Categories_wsInclude<ExtArgs> | null
    /**
     * Filter, which Categories_ws to fetch.
     */
    where: Categories_wsWhereUniqueInput
  }

  /**
   * Categories_ws findUniqueOrThrow
   */
  export type Categories_wsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categories_ws
     */
    select?: Categories_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categories_ws
     */
    omit?: Categories_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Categories_wsInclude<ExtArgs> | null
    /**
     * Filter, which Categories_ws to fetch.
     */
    where: Categories_wsWhereUniqueInput
  }

  /**
   * Categories_ws findFirst
   */
  export type Categories_wsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categories_ws
     */
    select?: Categories_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categories_ws
     */
    omit?: Categories_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Categories_wsInclude<ExtArgs> | null
    /**
     * Filter, which Categories_ws to fetch.
     */
    where?: Categories_wsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories_ws to fetch.
     */
    orderBy?: Categories_wsOrderByWithRelationInput | Categories_wsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categories_ws.
     */
    cursor?: Categories_wsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories_ws from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories_ws.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categories_ws.
     */
    distinct?: Categories_wsScalarFieldEnum | Categories_wsScalarFieldEnum[]
  }

  /**
   * Categories_ws findFirstOrThrow
   */
  export type Categories_wsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categories_ws
     */
    select?: Categories_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categories_ws
     */
    omit?: Categories_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Categories_wsInclude<ExtArgs> | null
    /**
     * Filter, which Categories_ws to fetch.
     */
    where?: Categories_wsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories_ws to fetch.
     */
    orderBy?: Categories_wsOrderByWithRelationInput | Categories_wsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categories_ws.
     */
    cursor?: Categories_wsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories_ws from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories_ws.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categories_ws.
     */
    distinct?: Categories_wsScalarFieldEnum | Categories_wsScalarFieldEnum[]
  }

  /**
   * Categories_ws findMany
   */
  export type Categories_wsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categories_ws
     */
    select?: Categories_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categories_ws
     */
    omit?: Categories_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Categories_wsInclude<ExtArgs> | null
    /**
     * Filter, which Categories_ws to fetch.
     */
    where?: Categories_wsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories_ws to fetch.
     */
    orderBy?: Categories_wsOrderByWithRelationInput | Categories_wsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Categories_ws.
     */
    cursor?: Categories_wsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories_ws from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories_ws.
     */
    skip?: number
    distinct?: Categories_wsScalarFieldEnum | Categories_wsScalarFieldEnum[]
  }

  /**
   * Categories_ws create
   */
  export type Categories_wsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categories_ws
     */
    select?: Categories_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categories_ws
     */
    omit?: Categories_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Categories_wsInclude<ExtArgs> | null
    /**
     * The data needed to create a Categories_ws.
     */
    data: XOR<Categories_wsCreateInput, Categories_wsUncheckedCreateInput>
  }

  /**
   * Categories_ws createMany
   */
  export type Categories_wsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Categories_ws.
     */
    data: Categories_wsCreateManyInput | Categories_wsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Categories_ws update
   */
  export type Categories_wsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categories_ws
     */
    select?: Categories_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categories_ws
     */
    omit?: Categories_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Categories_wsInclude<ExtArgs> | null
    /**
     * The data needed to update a Categories_ws.
     */
    data: XOR<Categories_wsUpdateInput, Categories_wsUncheckedUpdateInput>
    /**
     * Choose, which Categories_ws to update.
     */
    where: Categories_wsWhereUniqueInput
  }

  /**
   * Categories_ws updateMany
   */
  export type Categories_wsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Categories_ws.
     */
    data: XOR<Categories_wsUpdateManyMutationInput, Categories_wsUncheckedUpdateManyInput>
    /**
     * Filter which Categories_ws to update
     */
    where?: Categories_wsWhereInput
    /**
     * Limit how many Categories_ws to update.
     */
    limit?: number
  }

  /**
   * Categories_ws upsert
   */
  export type Categories_wsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categories_ws
     */
    select?: Categories_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categories_ws
     */
    omit?: Categories_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Categories_wsInclude<ExtArgs> | null
    /**
     * The filter to search for the Categories_ws to update in case it exists.
     */
    where: Categories_wsWhereUniqueInput
    /**
     * In case the Categories_ws found by the `where` argument doesn't exist, create a new Categories_ws with this data.
     */
    create: XOR<Categories_wsCreateInput, Categories_wsUncheckedCreateInput>
    /**
     * In case the Categories_ws was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Categories_wsUpdateInput, Categories_wsUncheckedUpdateInput>
  }

  /**
   * Categories_ws delete
   */
  export type Categories_wsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categories_ws
     */
    select?: Categories_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categories_ws
     */
    omit?: Categories_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Categories_wsInclude<ExtArgs> | null
    /**
     * Filter which Categories_ws to delete.
     */
    where: Categories_wsWhereUniqueInput
  }

  /**
   * Categories_ws deleteMany
   */
  export type Categories_wsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Categories_ws to delete
     */
    where?: Categories_wsWhereInput
    /**
     * Limit how many Categories_ws to delete.
     */
    limit?: number
  }

  /**
   * Categories_ws.pet_ws
   */
  export type Categories_ws$pet_wsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pets_ws
     */
    select?: Pets_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pets_ws
     */
    omit?: Pets_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Pets_wsInclude<ExtArgs> | null
    where?: Pets_wsWhereInput
    orderBy?: Pets_wsOrderByWithRelationInput | Pets_wsOrderByWithRelationInput[]
    cursor?: Pets_wsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Pets_wsScalarFieldEnum | Pets_wsScalarFieldEnum[]
  }

  /**
   * Categories_ws without action
   */
  export type Categories_wsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categories_ws
     */
    select?: Categories_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Categories_ws
     */
    omit?: Categories_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Categories_wsInclude<ExtArgs> | null
  }


  /**
   * Model Genders_ws
   */

  export type AggregateGenders_ws = {
    _count: Genders_wsCountAggregateOutputType | null
    _avg: Genders_wsAvgAggregateOutputType | null
    _sum: Genders_wsSumAggregateOutputType | null
    _min: Genders_wsMinAggregateOutputType | null
    _max: Genders_wsMaxAggregateOutputType | null
  }

  export type Genders_wsAvgAggregateOutputType = {
    id_ws: number | null
  }

  export type Genders_wsSumAggregateOutputType = {
    id_ws: number | null
  }

  export type Genders_wsMinAggregateOutputType = {
    id_ws: number | null
    name_ws: string | null
  }

  export type Genders_wsMaxAggregateOutputType = {
    id_ws: number | null
    name_ws: string | null
  }

  export type Genders_wsCountAggregateOutputType = {
    id_ws: number
    name_ws: number
    _all: number
  }


  export type Genders_wsAvgAggregateInputType = {
    id_ws?: true
  }

  export type Genders_wsSumAggregateInputType = {
    id_ws?: true
  }

  export type Genders_wsMinAggregateInputType = {
    id_ws?: true
    name_ws?: true
  }

  export type Genders_wsMaxAggregateInputType = {
    id_ws?: true
    name_ws?: true
  }

  export type Genders_wsCountAggregateInputType = {
    id_ws?: true
    name_ws?: true
    _all?: true
  }

  export type Genders_wsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Genders_ws to aggregate.
     */
    where?: Genders_wsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Genders_ws to fetch.
     */
    orderBy?: Genders_wsOrderByWithRelationInput | Genders_wsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Genders_wsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Genders_ws from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Genders_ws.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Genders_ws
    **/
    _count?: true | Genders_wsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Genders_wsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Genders_wsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Genders_wsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Genders_wsMaxAggregateInputType
  }

  export type GetGenders_wsAggregateType<T extends Genders_wsAggregateArgs> = {
        [P in keyof T & keyof AggregateGenders_ws]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGenders_ws[P]>
      : GetScalarType<T[P], AggregateGenders_ws[P]>
  }




  export type Genders_wsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Genders_wsWhereInput
    orderBy?: Genders_wsOrderByWithAggregationInput | Genders_wsOrderByWithAggregationInput[]
    by: Genders_wsScalarFieldEnum[] | Genders_wsScalarFieldEnum
    having?: Genders_wsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Genders_wsCountAggregateInputType | true
    _avg?: Genders_wsAvgAggregateInputType
    _sum?: Genders_wsSumAggregateInputType
    _min?: Genders_wsMinAggregateInputType
    _max?: Genders_wsMaxAggregateInputType
  }

  export type Genders_wsGroupByOutputType = {
    id_ws: number
    name_ws: string
    _count: Genders_wsCountAggregateOutputType | null
    _avg: Genders_wsAvgAggregateOutputType | null
    _sum: Genders_wsSumAggregateOutputType | null
    _min: Genders_wsMinAggregateOutputType | null
    _max: Genders_wsMaxAggregateOutputType | null
  }

  type GetGenders_wsGroupByPayload<T extends Genders_wsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Genders_wsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Genders_wsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Genders_wsGroupByOutputType[P]>
            : GetScalarType<T[P], Genders_wsGroupByOutputType[P]>
        }
      >
    >


  export type Genders_wsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_ws?: boolean
    name_ws?: boolean
    pet_ws?: boolean | Genders_ws$pet_wsArgs<ExtArgs>
    _count?: boolean | Genders_wsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["genders_ws"]>



  export type Genders_wsSelectScalar = {
    id_ws?: boolean
    name_ws?: boolean
  }

  export type Genders_wsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_ws" | "name_ws", ExtArgs["result"]["genders_ws"]>
  export type Genders_wsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pet_ws?: boolean | Genders_ws$pet_wsArgs<ExtArgs>
    _count?: boolean | Genders_wsCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $Genders_wsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Genders_ws"
    objects: {
      pet_ws: Prisma.$Pets_wsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_ws: number
      name_ws: string
    }, ExtArgs["result"]["genders_ws"]>
    composites: {}
  }

  type Genders_wsGetPayload<S extends boolean | null | undefined | Genders_wsDefaultArgs> = $Result.GetResult<Prisma.$Genders_wsPayload, S>

  type Genders_wsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<Genders_wsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Genders_wsCountAggregateInputType | true
    }

  export interface Genders_wsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Genders_ws'], meta: { name: 'Genders_ws' } }
    /**
     * Find zero or one Genders_ws that matches the filter.
     * @param {Genders_wsFindUniqueArgs} args - Arguments to find a Genders_ws
     * @example
     * // Get one Genders_ws
     * const genders_ws = await prisma.genders_ws.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Genders_wsFindUniqueArgs>(args: SelectSubset<T, Genders_wsFindUniqueArgs<ExtArgs>>): Prisma__Genders_wsClient<$Result.GetResult<Prisma.$Genders_wsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Genders_ws that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {Genders_wsFindUniqueOrThrowArgs} args - Arguments to find a Genders_ws
     * @example
     * // Get one Genders_ws
     * const genders_ws = await prisma.genders_ws.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Genders_wsFindUniqueOrThrowArgs>(args: SelectSubset<T, Genders_wsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Genders_wsClient<$Result.GetResult<Prisma.$Genders_wsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Genders_ws that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Genders_wsFindFirstArgs} args - Arguments to find a Genders_ws
     * @example
     * // Get one Genders_ws
     * const genders_ws = await prisma.genders_ws.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Genders_wsFindFirstArgs>(args?: SelectSubset<T, Genders_wsFindFirstArgs<ExtArgs>>): Prisma__Genders_wsClient<$Result.GetResult<Prisma.$Genders_wsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Genders_ws that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Genders_wsFindFirstOrThrowArgs} args - Arguments to find a Genders_ws
     * @example
     * // Get one Genders_ws
     * const genders_ws = await prisma.genders_ws.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Genders_wsFindFirstOrThrowArgs>(args?: SelectSubset<T, Genders_wsFindFirstOrThrowArgs<ExtArgs>>): Prisma__Genders_wsClient<$Result.GetResult<Prisma.$Genders_wsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Genders_ws that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Genders_wsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Genders_ws
     * const genders_ws = await prisma.genders_ws.findMany()
     * 
     * // Get first 10 Genders_ws
     * const genders_ws = await prisma.genders_ws.findMany({ take: 10 })
     * 
     * // Only select the `id_ws`
     * const genders_wsWithId_wsOnly = await prisma.genders_ws.findMany({ select: { id_ws: true } })
     * 
     */
    findMany<T extends Genders_wsFindManyArgs>(args?: SelectSubset<T, Genders_wsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Genders_wsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Genders_ws.
     * @param {Genders_wsCreateArgs} args - Arguments to create a Genders_ws.
     * @example
     * // Create one Genders_ws
     * const Genders_ws = await prisma.genders_ws.create({
     *   data: {
     *     // ... data to create a Genders_ws
     *   }
     * })
     * 
     */
    create<T extends Genders_wsCreateArgs>(args: SelectSubset<T, Genders_wsCreateArgs<ExtArgs>>): Prisma__Genders_wsClient<$Result.GetResult<Prisma.$Genders_wsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Genders_ws.
     * @param {Genders_wsCreateManyArgs} args - Arguments to create many Genders_ws.
     * @example
     * // Create many Genders_ws
     * const genders_ws = await prisma.genders_ws.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Genders_wsCreateManyArgs>(args?: SelectSubset<T, Genders_wsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Genders_ws.
     * @param {Genders_wsDeleteArgs} args - Arguments to delete one Genders_ws.
     * @example
     * // Delete one Genders_ws
     * const Genders_ws = await prisma.genders_ws.delete({
     *   where: {
     *     // ... filter to delete one Genders_ws
     *   }
     * })
     * 
     */
    delete<T extends Genders_wsDeleteArgs>(args: SelectSubset<T, Genders_wsDeleteArgs<ExtArgs>>): Prisma__Genders_wsClient<$Result.GetResult<Prisma.$Genders_wsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Genders_ws.
     * @param {Genders_wsUpdateArgs} args - Arguments to update one Genders_ws.
     * @example
     * // Update one Genders_ws
     * const genders_ws = await prisma.genders_ws.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Genders_wsUpdateArgs>(args: SelectSubset<T, Genders_wsUpdateArgs<ExtArgs>>): Prisma__Genders_wsClient<$Result.GetResult<Prisma.$Genders_wsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Genders_ws.
     * @param {Genders_wsDeleteManyArgs} args - Arguments to filter Genders_ws to delete.
     * @example
     * // Delete a few Genders_ws
     * const { count } = await prisma.genders_ws.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Genders_wsDeleteManyArgs>(args?: SelectSubset<T, Genders_wsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Genders_ws.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Genders_wsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Genders_ws
     * const genders_ws = await prisma.genders_ws.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Genders_wsUpdateManyArgs>(args: SelectSubset<T, Genders_wsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Genders_ws.
     * @param {Genders_wsUpsertArgs} args - Arguments to update or create a Genders_ws.
     * @example
     * // Update or create a Genders_ws
     * const genders_ws = await prisma.genders_ws.upsert({
     *   create: {
     *     // ... data to create a Genders_ws
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Genders_ws we want to update
     *   }
     * })
     */
    upsert<T extends Genders_wsUpsertArgs>(args: SelectSubset<T, Genders_wsUpsertArgs<ExtArgs>>): Prisma__Genders_wsClient<$Result.GetResult<Prisma.$Genders_wsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Genders_ws.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Genders_wsCountArgs} args - Arguments to filter Genders_ws to count.
     * @example
     * // Count the number of Genders_ws
     * const count = await prisma.genders_ws.count({
     *   where: {
     *     // ... the filter for the Genders_ws we want to count
     *   }
     * })
    **/
    count<T extends Genders_wsCountArgs>(
      args?: Subset<T, Genders_wsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Genders_wsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Genders_ws.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Genders_wsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Genders_wsAggregateArgs>(args: Subset<T, Genders_wsAggregateArgs>): Prisma.PrismaPromise<GetGenders_wsAggregateType<T>>

    /**
     * Group by Genders_ws.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Genders_wsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Genders_wsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Genders_wsGroupByArgs['orderBy'] }
        : { orderBy?: Genders_wsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Genders_wsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGenders_wsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Genders_ws model
   */
  readonly fields: Genders_wsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Genders_ws.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Genders_wsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pet_ws<T extends Genders_ws$pet_wsArgs<ExtArgs> = {}>(args?: Subset<T, Genders_ws$pet_wsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Pets_wsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Genders_ws model
   */
  interface Genders_wsFieldRefs {
    readonly id_ws: FieldRef<"Genders_ws", 'Int'>
    readonly name_ws: FieldRef<"Genders_ws", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Genders_ws findUnique
   */
  export type Genders_wsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Genders_ws
     */
    select?: Genders_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Genders_ws
     */
    omit?: Genders_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Genders_wsInclude<ExtArgs> | null
    /**
     * Filter, which Genders_ws to fetch.
     */
    where: Genders_wsWhereUniqueInput
  }

  /**
   * Genders_ws findUniqueOrThrow
   */
  export type Genders_wsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Genders_ws
     */
    select?: Genders_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Genders_ws
     */
    omit?: Genders_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Genders_wsInclude<ExtArgs> | null
    /**
     * Filter, which Genders_ws to fetch.
     */
    where: Genders_wsWhereUniqueInput
  }

  /**
   * Genders_ws findFirst
   */
  export type Genders_wsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Genders_ws
     */
    select?: Genders_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Genders_ws
     */
    omit?: Genders_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Genders_wsInclude<ExtArgs> | null
    /**
     * Filter, which Genders_ws to fetch.
     */
    where?: Genders_wsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Genders_ws to fetch.
     */
    orderBy?: Genders_wsOrderByWithRelationInput | Genders_wsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Genders_ws.
     */
    cursor?: Genders_wsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Genders_ws from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Genders_ws.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Genders_ws.
     */
    distinct?: Genders_wsScalarFieldEnum | Genders_wsScalarFieldEnum[]
  }

  /**
   * Genders_ws findFirstOrThrow
   */
  export type Genders_wsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Genders_ws
     */
    select?: Genders_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Genders_ws
     */
    omit?: Genders_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Genders_wsInclude<ExtArgs> | null
    /**
     * Filter, which Genders_ws to fetch.
     */
    where?: Genders_wsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Genders_ws to fetch.
     */
    orderBy?: Genders_wsOrderByWithRelationInput | Genders_wsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Genders_ws.
     */
    cursor?: Genders_wsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Genders_ws from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Genders_ws.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Genders_ws.
     */
    distinct?: Genders_wsScalarFieldEnum | Genders_wsScalarFieldEnum[]
  }

  /**
   * Genders_ws findMany
   */
  export type Genders_wsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Genders_ws
     */
    select?: Genders_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Genders_ws
     */
    omit?: Genders_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Genders_wsInclude<ExtArgs> | null
    /**
     * Filter, which Genders_ws to fetch.
     */
    where?: Genders_wsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Genders_ws to fetch.
     */
    orderBy?: Genders_wsOrderByWithRelationInput | Genders_wsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Genders_ws.
     */
    cursor?: Genders_wsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Genders_ws from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Genders_ws.
     */
    skip?: number
    distinct?: Genders_wsScalarFieldEnum | Genders_wsScalarFieldEnum[]
  }

  /**
   * Genders_ws create
   */
  export type Genders_wsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Genders_ws
     */
    select?: Genders_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Genders_ws
     */
    omit?: Genders_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Genders_wsInclude<ExtArgs> | null
    /**
     * The data needed to create a Genders_ws.
     */
    data: XOR<Genders_wsCreateInput, Genders_wsUncheckedCreateInput>
  }

  /**
   * Genders_ws createMany
   */
  export type Genders_wsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Genders_ws.
     */
    data: Genders_wsCreateManyInput | Genders_wsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Genders_ws update
   */
  export type Genders_wsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Genders_ws
     */
    select?: Genders_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Genders_ws
     */
    omit?: Genders_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Genders_wsInclude<ExtArgs> | null
    /**
     * The data needed to update a Genders_ws.
     */
    data: XOR<Genders_wsUpdateInput, Genders_wsUncheckedUpdateInput>
    /**
     * Choose, which Genders_ws to update.
     */
    where: Genders_wsWhereUniqueInput
  }

  /**
   * Genders_ws updateMany
   */
  export type Genders_wsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Genders_ws.
     */
    data: XOR<Genders_wsUpdateManyMutationInput, Genders_wsUncheckedUpdateManyInput>
    /**
     * Filter which Genders_ws to update
     */
    where?: Genders_wsWhereInput
    /**
     * Limit how many Genders_ws to update.
     */
    limit?: number
  }

  /**
   * Genders_ws upsert
   */
  export type Genders_wsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Genders_ws
     */
    select?: Genders_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Genders_ws
     */
    omit?: Genders_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Genders_wsInclude<ExtArgs> | null
    /**
     * The filter to search for the Genders_ws to update in case it exists.
     */
    where: Genders_wsWhereUniqueInput
    /**
     * In case the Genders_ws found by the `where` argument doesn't exist, create a new Genders_ws with this data.
     */
    create: XOR<Genders_wsCreateInput, Genders_wsUncheckedCreateInput>
    /**
     * In case the Genders_ws was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Genders_wsUpdateInput, Genders_wsUncheckedUpdateInput>
  }

  /**
   * Genders_ws delete
   */
  export type Genders_wsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Genders_ws
     */
    select?: Genders_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Genders_ws
     */
    omit?: Genders_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Genders_wsInclude<ExtArgs> | null
    /**
     * Filter which Genders_ws to delete.
     */
    where: Genders_wsWhereUniqueInput
  }

  /**
   * Genders_ws deleteMany
   */
  export type Genders_wsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Genders_ws to delete
     */
    where?: Genders_wsWhereInput
    /**
     * Limit how many Genders_ws to delete.
     */
    limit?: number
  }

  /**
   * Genders_ws.pet_ws
   */
  export type Genders_ws$pet_wsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pets_ws
     */
    select?: Pets_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Pets_ws
     */
    omit?: Pets_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Pets_wsInclude<ExtArgs> | null
    where?: Pets_wsWhereInput
    orderBy?: Pets_wsOrderByWithRelationInput | Pets_wsOrderByWithRelationInput[]
    cursor?: Pets_wsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Pets_wsScalarFieldEnum | Pets_wsScalarFieldEnum[]
  }

  /**
   * Genders_ws without action
   */
  export type Genders_wsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Genders_ws
     */
    select?: Genders_wsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Genders_ws
     */
    omit?: Genders_wsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Genders_wsInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const Users_wsScalarFieldEnum: {
    id_ws: 'id_ws',
    fullname_ws: 'fullname_ws',
    email_ws: 'email_ws',
    password_ws: 'password_ws'
  };

  export type Users_wsScalarFieldEnum = (typeof Users_wsScalarFieldEnum)[keyof typeof Users_wsScalarFieldEnum]


  export const Pets_wsScalarFieldEnum: {
    id_ws: 'id_ws',
    name_ws: 'name_ws',
    photo_ws: 'photo_ws',
    estado_ws: 'estado_ws',
    raceId_ws: 'raceId_ws',
    categoryId_ws: 'categoryId_ws',
    genderId_ws: 'genderId_ws',
    userId_ws: 'userId_ws',
    latitud_ws: 'latitud_ws',
    longitud_ws: 'longitud_ws'
  };

  export type Pets_wsScalarFieldEnum = (typeof Pets_wsScalarFieldEnum)[keyof typeof Pets_wsScalarFieldEnum]


  export const Races_wsScalarFieldEnum: {
    id_ws: 'id_ws',
    name_ws: 'name_ws'
  };

  export type Races_wsScalarFieldEnum = (typeof Races_wsScalarFieldEnum)[keyof typeof Races_wsScalarFieldEnum]


  export const Categories_wsScalarFieldEnum: {
    id_ws: 'id_ws',
    name_ws: 'name_ws'
  };

  export type Categories_wsScalarFieldEnum = (typeof Categories_wsScalarFieldEnum)[keyof typeof Categories_wsScalarFieldEnum]


  export const Genders_wsScalarFieldEnum: {
    id_ws: 'id_ws',
    name_ws: 'name_ws'
  };

  export type Genders_wsScalarFieldEnum = (typeof Genders_wsScalarFieldEnum)[keyof typeof Genders_wsScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const Users_wsOrderByRelevanceFieldEnum: {
    fullname_ws: 'fullname_ws',
    email_ws: 'email_ws',
    password_ws: 'password_ws'
  };

  export type Users_wsOrderByRelevanceFieldEnum = (typeof Users_wsOrderByRelevanceFieldEnum)[keyof typeof Users_wsOrderByRelevanceFieldEnum]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const Pets_wsOrderByRelevanceFieldEnum: {
    name_ws: 'name_ws',
    photo_ws: 'photo_ws'
  };

  export type Pets_wsOrderByRelevanceFieldEnum = (typeof Pets_wsOrderByRelevanceFieldEnum)[keyof typeof Pets_wsOrderByRelevanceFieldEnum]


  export const Races_wsOrderByRelevanceFieldEnum: {
    name_ws: 'name_ws'
  };

  export type Races_wsOrderByRelevanceFieldEnum = (typeof Races_wsOrderByRelevanceFieldEnum)[keyof typeof Races_wsOrderByRelevanceFieldEnum]


  export const Categories_wsOrderByRelevanceFieldEnum: {
    name_ws: 'name_ws'
  };

  export type Categories_wsOrderByRelevanceFieldEnum = (typeof Categories_wsOrderByRelevanceFieldEnum)[keyof typeof Categories_wsOrderByRelevanceFieldEnum]


  export const Genders_wsOrderByRelevanceFieldEnum: {
    name_ws: 'name_ws'
  };

  export type Genders_wsOrderByRelevanceFieldEnum = (typeof Genders_wsOrderByRelevanceFieldEnum)[keyof typeof Genders_wsOrderByRelevanceFieldEnum]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'Estados_ws'
   */
  export type EnumEstados_wsFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Estados_ws'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type Users_wsWhereInput = {
    AND?: Users_wsWhereInput | Users_wsWhereInput[]
    OR?: Users_wsWhereInput[]
    NOT?: Users_wsWhereInput | Users_wsWhereInput[]
    id_ws?: IntFilter<"Users_ws"> | number
    fullname_ws?: StringFilter<"Users_ws"> | string
    email_ws?: StringFilter<"Users_ws"> | string
    password_ws?: StringFilter<"Users_ws"> | string
    pet_ws?: Pets_wsListRelationFilter
  }

  export type Users_wsOrderByWithRelationInput = {
    id_ws?: SortOrder
    fullname_ws?: SortOrder
    email_ws?: SortOrder
    password_ws?: SortOrder
    pet_ws?: Pets_wsOrderByRelationAggregateInput
    _relevance?: Users_wsOrderByRelevanceInput
  }

  export type Users_wsWhereUniqueInput = Prisma.AtLeast<{
    id_ws?: number
    email_ws?: string
    AND?: Users_wsWhereInput | Users_wsWhereInput[]
    OR?: Users_wsWhereInput[]
    NOT?: Users_wsWhereInput | Users_wsWhereInput[]
    fullname_ws?: StringFilter<"Users_ws"> | string
    password_ws?: StringFilter<"Users_ws"> | string
    pet_ws?: Pets_wsListRelationFilter
  }, "id_ws" | "email_ws">

  export type Users_wsOrderByWithAggregationInput = {
    id_ws?: SortOrder
    fullname_ws?: SortOrder
    email_ws?: SortOrder
    password_ws?: SortOrder
    _count?: Users_wsCountOrderByAggregateInput
    _avg?: Users_wsAvgOrderByAggregateInput
    _max?: Users_wsMaxOrderByAggregateInput
    _min?: Users_wsMinOrderByAggregateInput
    _sum?: Users_wsSumOrderByAggregateInput
  }

  export type Users_wsScalarWhereWithAggregatesInput = {
    AND?: Users_wsScalarWhereWithAggregatesInput | Users_wsScalarWhereWithAggregatesInput[]
    OR?: Users_wsScalarWhereWithAggregatesInput[]
    NOT?: Users_wsScalarWhereWithAggregatesInput | Users_wsScalarWhereWithAggregatesInput[]
    id_ws?: IntWithAggregatesFilter<"Users_ws"> | number
    fullname_ws?: StringWithAggregatesFilter<"Users_ws"> | string
    email_ws?: StringWithAggregatesFilter<"Users_ws"> | string
    password_ws?: StringWithAggregatesFilter<"Users_ws"> | string
  }

  export type Pets_wsWhereInput = {
    AND?: Pets_wsWhereInput | Pets_wsWhereInput[]
    OR?: Pets_wsWhereInput[]
    NOT?: Pets_wsWhereInput | Pets_wsWhereInput[]
    id_ws?: IntFilter<"Pets_ws"> | number
    name_ws?: StringNullableFilter<"Pets_ws"> | string | null
    photo_ws?: StringFilter<"Pets_ws"> | string
    estado_ws?: EnumEstados_wsFilter<"Pets_ws"> | $Enums.Estados_ws
    raceId_ws?: IntFilter<"Pets_ws"> | number
    categoryId_ws?: IntFilter<"Pets_ws"> | number
    genderId_ws?: IntFilter<"Pets_ws"> | number
    userId_ws?: IntFilter<"Pets_ws"> | number
    latitud_ws?: FloatNullableFilter<"Pets_ws"> | number | null
    longitud_ws?: FloatNullableFilter<"Pets_ws"> | number | null
    race_ws?: XOR<Races_wsScalarRelationFilter, Races_wsWhereInput>
    category_ws?: XOR<Categories_wsScalarRelationFilter, Categories_wsWhereInput>
    gender_ws?: XOR<Genders_wsScalarRelationFilter, Genders_wsWhereInput>
    user_ws?: XOR<Users_wsScalarRelationFilter, Users_wsWhereInput>
  }

  export type Pets_wsOrderByWithRelationInput = {
    id_ws?: SortOrder
    name_ws?: SortOrderInput | SortOrder
    photo_ws?: SortOrder
    estado_ws?: SortOrder
    raceId_ws?: SortOrder
    categoryId_ws?: SortOrder
    genderId_ws?: SortOrder
    userId_ws?: SortOrder
    latitud_ws?: SortOrderInput | SortOrder
    longitud_ws?: SortOrderInput | SortOrder
    race_ws?: Races_wsOrderByWithRelationInput
    category_ws?: Categories_wsOrderByWithRelationInput
    gender_ws?: Genders_wsOrderByWithRelationInput
    user_ws?: Users_wsOrderByWithRelationInput
    _relevance?: Pets_wsOrderByRelevanceInput
  }

  export type Pets_wsWhereUniqueInput = Prisma.AtLeast<{
    id_ws?: number
    AND?: Pets_wsWhereInput | Pets_wsWhereInput[]
    OR?: Pets_wsWhereInput[]
    NOT?: Pets_wsWhereInput | Pets_wsWhereInput[]
    name_ws?: StringNullableFilter<"Pets_ws"> | string | null
    photo_ws?: StringFilter<"Pets_ws"> | string
    estado_ws?: EnumEstados_wsFilter<"Pets_ws"> | $Enums.Estados_ws
    raceId_ws?: IntFilter<"Pets_ws"> | number
    categoryId_ws?: IntFilter<"Pets_ws"> | number
    genderId_ws?: IntFilter<"Pets_ws"> | number
    userId_ws?: IntFilter<"Pets_ws"> | number
    latitud_ws?: FloatNullableFilter<"Pets_ws"> | number | null
    longitud_ws?: FloatNullableFilter<"Pets_ws"> | number | null
    race_ws?: XOR<Races_wsScalarRelationFilter, Races_wsWhereInput>
    category_ws?: XOR<Categories_wsScalarRelationFilter, Categories_wsWhereInput>
    gender_ws?: XOR<Genders_wsScalarRelationFilter, Genders_wsWhereInput>
    user_ws?: XOR<Users_wsScalarRelationFilter, Users_wsWhereInput>
  }, "id_ws">

  export type Pets_wsOrderByWithAggregationInput = {
    id_ws?: SortOrder
    name_ws?: SortOrderInput | SortOrder
    photo_ws?: SortOrder
    estado_ws?: SortOrder
    raceId_ws?: SortOrder
    categoryId_ws?: SortOrder
    genderId_ws?: SortOrder
    userId_ws?: SortOrder
    latitud_ws?: SortOrderInput | SortOrder
    longitud_ws?: SortOrderInput | SortOrder
    _count?: Pets_wsCountOrderByAggregateInput
    _avg?: Pets_wsAvgOrderByAggregateInput
    _max?: Pets_wsMaxOrderByAggregateInput
    _min?: Pets_wsMinOrderByAggregateInput
    _sum?: Pets_wsSumOrderByAggregateInput
  }

  export type Pets_wsScalarWhereWithAggregatesInput = {
    AND?: Pets_wsScalarWhereWithAggregatesInput | Pets_wsScalarWhereWithAggregatesInput[]
    OR?: Pets_wsScalarWhereWithAggregatesInput[]
    NOT?: Pets_wsScalarWhereWithAggregatesInput | Pets_wsScalarWhereWithAggregatesInput[]
    id_ws?: IntWithAggregatesFilter<"Pets_ws"> | number
    name_ws?: StringNullableWithAggregatesFilter<"Pets_ws"> | string | null
    photo_ws?: StringWithAggregatesFilter<"Pets_ws"> | string
    estado_ws?: EnumEstados_wsWithAggregatesFilter<"Pets_ws"> | $Enums.Estados_ws
    raceId_ws?: IntWithAggregatesFilter<"Pets_ws"> | number
    categoryId_ws?: IntWithAggregatesFilter<"Pets_ws"> | number
    genderId_ws?: IntWithAggregatesFilter<"Pets_ws"> | number
    userId_ws?: IntWithAggregatesFilter<"Pets_ws"> | number
    latitud_ws?: FloatNullableWithAggregatesFilter<"Pets_ws"> | number | null
    longitud_ws?: FloatNullableWithAggregatesFilter<"Pets_ws"> | number | null
  }

  export type Races_wsWhereInput = {
    AND?: Races_wsWhereInput | Races_wsWhereInput[]
    OR?: Races_wsWhereInput[]
    NOT?: Races_wsWhereInput | Races_wsWhereInput[]
    id_ws?: IntFilter<"Races_ws"> | number
    name_ws?: StringFilter<"Races_ws"> | string
    pet_ws?: Pets_wsListRelationFilter
  }

  export type Races_wsOrderByWithRelationInput = {
    id_ws?: SortOrder
    name_ws?: SortOrder
    pet_ws?: Pets_wsOrderByRelationAggregateInput
    _relevance?: Races_wsOrderByRelevanceInput
  }

  export type Races_wsWhereUniqueInput = Prisma.AtLeast<{
    id_ws?: number
    AND?: Races_wsWhereInput | Races_wsWhereInput[]
    OR?: Races_wsWhereInput[]
    NOT?: Races_wsWhereInput | Races_wsWhereInput[]
    name_ws?: StringFilter<"Races_ws"> | string
    pet_ws?: Pets_wsListRelationFilter
  }, "id_ws">

  export type Races_wsOrderByWithAggregationInput = {
    id_ws?: SortOrder
    name_ws?: SortOrder
    _count?: Races_wsCountOrderByAggregateInput
    _avg?: Races_wsAvgOrderByAggregateInput
    _max?: Races_wsMaxOrderByAggregateInput
    _min?: Races_wsMinOrderByAggregateInput
    _sum?: Races_wsSumOrderByAggregateInput
  }

  export type Races_wsScalarWhereWithAggregatesInput = {
    AND?: Races_wsScalarWhereWithAggregatesInput | Races_wsScalarWhereWithAggregatesInput[]
    OR?: Races_wsScalarWhereWithAggregatesInput[]
    NOT?: Races_wsScalarWhereWithAggregatesInput | Races_wsScalarWhereWithAggregatesInput[]
    id_ws?: IntWithAggregatesFilter<"Races_ws"> | number
    name_ws?: StringWithAggregatesFilter<"Races_ws"> | string
  }

  export type Categories_wsWhereInput = {
    AND?: Categories_wsWhereInput | Categories_wsWhereInput[]
    OR?: Categories_wsWhereInput[]
    NOT?: Categories_wsWhereInput | Categories_wsWhereInput[]
    id_ws?: IntFilter<"Categories_ws"> | number
    name_ws?: StringFilter<"Categories_ws"> | string
    pet_ws?: Pets_wsListRelationFilter
  }

  export type Categories_wsOrderByWithRelationInput = {
    id_ws?: SortOrder
    name_ws?: SortOrder
    pet_ws?: Pets_wsOrderByRelationAggregateInput
    _relevance?: Categories_wsOrderByRelevanceInput
  }

  export type Categories_wsWhereUniqueInput = Prisma.AtLeast<{
    id_ws?: number
    AND?: Categories_wsWhereInput | Categories_wsWhereInput[]
    OR?: Categories_wsWhereInput[]
    NOT?: Categories_wsWhereInput | Categories_wsWhereInput[]
    name_ws?: StringFilter<"Categories_ws"> | string
    pet_ws?: Pets_wsListRelationFilter
  }, "id_ws">

  export type Categories_wsOrderByWithAggregationInput = {
    id_ws?: SortOrder
    name_ws?: SortOrder
    _count?: Categories_wsCountOrderByAggregateInput
    _avg?: Categories_wsAvgOrderByAggregateInput
    _max?: Categories_wsMaxOrderByAggregateInput
    _min?: Categories_wsMinOrderByAggregateInput
    _sum?: Categories_wsSumOrderByAggregateInput
  }

  export type Categories_wsScalarWhereWithAggregatesInput = {
    AND?: Categories_wsScalarWhereWithAggregatesInput | Categories_wsScalarWhereWithAggregatesInput[]
    OR?: Categories_wsScalarWhereWithAggregatesInput[]
    NOT?: Categories_wsScalarWhereWithAggregatesInput | Categories_wsScalarWhereWithAggregatesInput[]
    id_ws?: IntWithAggregatesFilter<"Categories_ws"> | number
    name_ws?: StringWithAggregatesFilter<"Categories_ws"> | string
  }

  export type Genders_wsWhereInput = {
    AND?: Genders_wsWhereInput | Genders_wsWhereInput[]
    OR?: Genders_wsWhereInput[]
    NOT?: Genders_wsWhereInput | Genders_wsWhereInput[]
    id_ws?: IntFilter<"Genders_ws"> | number
    name_ws?: StringFilter<"Genders_ws"> | string
    pet_ws?: Pets_wsListRelationFilter
  }

  export type Genders_wsOrderByWithRelationInput = {
    id_ws?: SortOrder
    name_ws?: SortOrder
    pet_ws?: Pets_wsOrderByRelationAggregateInput
    _relevance?: Genders_wsOrderByRelevanceInput
  }

  export type Genders_wsWhereUniqueInput = Prisma.AtLeast<{
    id_ws?: number
    AND?: Genders_wsWhereInput | Genders_wsWhereInput[]
    OR?: Genders_wsWhereInput[]
    NOT?: Genders_wsWhereInput | Genders_wsWhereInput[]
    name_ws?: StringFilter<"Genders_ws"> | string
    pet_ws?: Pets_wsListRelationFilter
  }, "id_ws">

  export type Genders_wsOrderByWithAggregationInput = {
    id_ws?: SortOrder
    name_ws?: SortOrder
    _count?: Genders_wsCountOrderByAggregateInput
    _avg?: Genders_wsAvgOrderByAggregateInput
    _max?: Genders_wsMaxOrderByAggregateInput
    _min?: Genders_wsMinOrderByAggregateInput
    _sum?: Genders_wsSumOrderByAggregateInput
  }

  export type Genders_wsScalarWhereWithAggregatesInput = {
    AND?: Genders_wsScalarWhereWithAggregatesInput | Genders_wsScalarWhereWithAggregatesInput[]
    OR?: Genders_wsScalarWhereWithAggregatesInput[]
    NOT?: Genders_wsScalarWhereWithAggregatesInput | Genders_wsScalarWhereWithAggregatesInput[]
    id_ws?: IntWithAggregatesFilter<"Genders_ws"> | number
    name_ws?: StringWithAggregatesFilter<"Genders_ws"> | string
  }

  export type Users_wsCreateInput = {
    fullname_ws: string
    email_ws: string
    password_ws: string
    pet_ws?: Pets_wsCreateNestedManyWithoutUser_wsInput
  }

  export type Users_wsUncheckedCreateInput = {
    id_ws?: number
    fullname_ws: string
    email_ws: string
    password_ws: string
    pet_ws?: Pets_wsUncheckedCreateNestedManyWithoutUser_wsInput
  }

  export type Users_wsUpdateInput = {
    fullname_ws?: StringFieldUpdateOperationsInput | string
    email_ws?: StringFieldUpdateOperationsInput | string
    password_ws?: StringFieldUpdateOperationsInput | string
    pet_ws?: Pets_wsUpdateManyWithoutUser_wsNestedInput
  }

  export type Users_wsUncheckedUpdateInput = {
    id_ws?: IntFieldUpdateOperationsInput | number
    fullname_ws?: StringFieldUpdateOperationsInput | string
    email_ws?: StringFieldUpdateOperationsInput | string
    password_ws?: StringFieldUpdateOperationsInput | string
    pet_ws?: Pets_wsUncheckedUpdateManyWithoutUser_wsNestedInput
  }

  export type Users_wsCreateManyInput = {
    id_ws?: number
    fullname_ws: string
    email_ws: string
    password_ws: string
  }

  export type Users_wsUpdateManyMutationInput = {
    fullname_ws?: StringFieldUpdateOperationsInput | string
    email_ws?: StringFieldUpdateOperationsInput | string
    password_ws?: StringFieldUpdateOperationsInput | string
  }

  export type Users_wsUncheckedUpdateManyInput = {
    id_ws?: IntFieldUpdateOperationsInput | number
    fullname_ws?: StringFieldUpdateOperationsInput | string
    email_ws?: StringFieldUpdateOperationsInput | string
    password_ws?: StringFieldUpdateOperationsInput | string
  }

  export type Pets_wsCreateInput = {
    name_ws?: string | null
    photo_ws: string
    estado_ws?: $Enums.Estados_ws
    latitud_ws?: number | null
    longitud_ws?: number | null
    race_ws: Races_wsCreateNestedOneWithoutPet_wsInput
    category_ws: Categories_wsCreateNestedOneWithoutPet_wsInput
    gender_ws: Genders_wsCreateNestedOneWithoutPet_wsInput
    user_ws: Users_wsCreateNestedOneWithoutPet_wsInput
  }

  export type Pets_wsUncheckedCreateInput = {
    id_ws?: number
    name_ws?: string | null
    photo_ws: string
    estado_ws?: $Enums.Estados_ws
    raceId_ws: number
    categoryId_ws: number
    genderId_ws: number
    userId_ws: number
    latitud_ws?: number | null
    longitud_ws?: number | null
  }

  export type Pets_wsUpdateInput = {
    name_ws?: NullableStringFieldUpdateOperationsInput | string | null
    photo_ws?: StringFieldUpdateOperationsInput | string
    estado_ws?: EnumEstados_wsFieldUpdateOperationsInput | $Enums.Estados_ws
    latitud_ws?: NullableFloatFieldUpdateOperationsInput | number | null
    longitud_ws?: NullableFloatFieldUpdateOperationsInput | number | null
    race_ws?: Races_wsUpdateOneRequiredWithoutPet_wsNestedInput
    category_ws?: Categories_wsUpdateOneRequiredWithoutPet_wsNestedInput
    gender_ws?: Genders_wsUpdateOneRequiredWithoutPet_wsNestedInput
    user_ws?: Users_wsUpdateOneRequiredWithoutPet_wsNestedInput
  }

  export type Pets_wsUncheckedUpdateInput = {
    id_ws?: IntFieldUpdateOperationsInput | number
    name_ws?: NullableStringFieldUpdateOperationsInput | string | null
    photo_ws?: StringFieldUpdateOperationsInput | string
    estado_ws?: EnumEstados_wsFieldUpdateOperationsInput | $Enums.Estados_ws
    raceId_ws?: IntFieldUpdateOperationsInput | number
    categoryId_ws?: IntFieldUpdateOperationsInput | number
    genderId_ws?: IntFieldUpdateOperationsInput | number
    userId_ws?: IntFieldUpdateOperationsInput | number
    latitud_ws?: NullableFloatFieldUpdateOperationsInput | number | null
    longitud_ws?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type Pets_wsCreateManyInput = {
    id_ws?: number
    name_ws?: string | null
    photo_ws: string
    estado_ws?: $Enums.Estados_ws
    raceId_ws: number
    categoryId_ws: number
    genderId_ws: number
    userId_ws: number
    latitud_ws?: number | null
    longitud_ws?: number | null
  }

  export type Pets_wsUpdateManyMutationInput = {
    name_ws?: NullableStringFieldUpdateOperationsInput | string | null
    photo_ws?: StringFieldUpdateOperationsInput | string
    estado_ws?: EnumEstados_wsFieldUpdateOperationsInput | $Enums.Estados_ws
    latitud_ws?: NullableFloatFieldUpdateOperationsInput | number | null
    longitud_ws?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type Pets_wsUncheckedUpdateManyInput = {
    id_ws?: IntFieldUpdateOperationsInput | number
    name_ws?: NullableStringFieldUpdateOperationsInput | string | null
    photo_ws?: StringFieldUpdateOperationsInput | string
    estado_ws?: EnumEstados_wsFieldUpdateOperationsInput | $Enums.Estados_ws
    raceId_ws?: IntFieldUpdateOperationsInput | number
    categoryId_ws?: IntFieldUpdateOperationsInput | number
    genderId_ws?: IntFieldUpdateOperationsInput | number
    userId_ws?: IntFieldUpdateOperationsInput | number
    latitud_ws?: NullableFloatFieldUpdateOperationsInput | number | null
    longitud_ws?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type Races_wsCreateInput = {
    name_ws: string
    pet_ws?: Pets_wsCreateNestedManyWithoutRace_wsInput
  }

  export type Races_wsUncheckedCreateInput = {
    id_ws?: number
    name_ws: string
    pet_ws?: Pets_wsUncheckedCreateNestedManyWithoutRace_wsInput
  }

  export type Races_wsUpdateInput = {
    name_ws?: StringFieldUpdateOperationsInput | string
    pet_ws?: Pets_wsUpdateManyWithoutRace_wsNestedInput
  }

  export type Races_wsUncheckedUpdateInput = {
    id_ws?: IntFieldUpdateOperationsInput | number
    name_ws?: StringFieldUpdateOperationsInput | string
    pet_ws?: Pets_wsUncheckedUpdateManyWithoutRace_wsNestedInput
  }

  export type Races_wsCreateManyInput = {
    id_ws?: number
    name_ws: string
  }

  export type Races_wsUpdateManyMutationInput = {
    name_ws?: StringFieldUpdateOperationsInput | string
  }

  export type Races_wsUncheckedUpdateManyInput = {
    id_ws?: IntFieldUpdateOperationsInput | number
    name_ws?: StringFieldUpdateOperationsInput | string
  }

  export type Categories_wsCreateInput = {
    name_ws: string
    pet_ws?: Pets_wsCreateNestedManyWithoutCategory_wsInput
  }

  export type Categories_wsUncheckedCreateInput = {
    id_ws?: number
    name_ws: string
    pet_ws?: Pets_wsUncheckedCreateNestedManyWithoutCategory_wsInput
  }

  export type Categories_wsUpdateInput = {
    name_ws?: StringFieldUpdateOperationsInput | string
    pet_ws?: Pets_wsUpdateManyWithoutCategory_wsNestedInput
  }

  export type Categories_wsUncheckedUpdateInput = {
    id_ws?: IntFieldUpdateOperationsInput | number
    name_ws?: StringFieldUpdateOperationsInput | string
    pet_ws?: Pets_wsUncheckedUpdateManyWithoutCategory_wsNestedInput
  }

  export type Categories_wsCreateManyInput = {
    id_ws?: number
    name_ws: string
  }

  export type Categories_wsUpdateManyMutationInput = {
    name_ws?: StringFieldUpdateOperationsInput | string
  }

  export type Categories_wsUncheckedUpdateManyInput = {
    id_ws?: IntFieldUpdateOperationsInput | number
    name_ws?: StringFieldUpdateOperationsInput | string
  }

  export type Genders_wsCreateInput = {
    name_ws: string
    pet_ws?: Pets_wsCreateNestedManyWithoutGender_wsInput
  }

  export type Genders_wsUncheckedCreateInput = {
    id_ws?: number
    name_ws: string
    pet_ws?: Pets_wsUncheckedCreateNestedManyWithoutGender_wsInput
  }

  export type Genders_wsUpdateInput = {
    name_ws?: StringFieldUpdateOperationsInput | string
    pet_ws?: Pets_wsUpdateManyWithoutGender_wsNestedInput
  }

  export type Genders_wsUncheckedUpdateInput = {
    id_ws?: IntFieldUpdateOperationsInput | number
    name_ws?: StringFieldUpdateOperationsInput | string
    pet_ws?: Pets_wsUncheckedUpdateManyWithoutGender_wsNestedInput
  }

  export type Genders_wsCreateManyInput = {
    id_ws?: number
    name_ws: string
  }

  export type Genders_wsUpdateManyMutationInput = {
    name_ws?: StringFieldUpdateOperationsInput | string
  }

  export type Genders_wsUncheckedUpdateManyInput = {
    id_ws?: IntFieldUpdateOperationsInput | number
    name_ws?: StringFieldUpdateOperationsInput | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type Pets_wsListRelationFilter = {
    every?: Pets_wsWhereInput
    some?: Pets_wsWhereInput
    none?: Pets_wsWhereInput
  }

  export type Pets_wsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Users_wsOrderByRelevanceInput = {
    fields: Users_wsOrderByRelevanceFieldEnum | Users_wsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type Users_wsCountOrderByAggregateInput = {
    id_ws?: SortOrder
    fullname_ws?: SortOrder
    email_ws?: SortOrder
    password_ws?: SortOrder
  }

  export type Users_wsAvgOrderByAggregateInput = {
    id_ws?: SortOrder
  }

  export type Users_wsMaxOrderByAggregateInput = {
    id_ws?: SortOrder
    fullname_ws?: SortOrder
    email_ws?: SortOrder
    password_ws?: SortOrder
  }

  export type Users_wsMinOrderByAggregateInput = {
    id_ws?: SortOrder
    fullname_ws?: SortOrder
    email_ws?: SortOrder
    password_ws?: SortOrder
  }

  export type Users_wsSumOrderByAggregateInput = {
    id_ws?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type EnumEstados_wsFilter<$PrismaModel = never> = {
    equals?: $Enums.Estados_ws | EnumEstados_wsFieldRefInput<$PrismaModel>
    in?: $Enums.Estados_ws[]
    notIn?: $Enums.Estados_ws[]
    not?: NestedEnumEstados_wsFilter<$PrismaModel> | $Enums.Estados_ws
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type Races_wsScalarRelationFilter = {
    is?: Races_wsWhereInput
    isNot?: Races_wsWhereInput
  }

  export type Categories_wsScalarRelationFilter = {
    is?: Categories_wsWhereInput
    isNot?: Categories_wsWhereInput
  }

  export type Genders_wsScalarRelationFilter = {
    is?: Genders_wsWhereInput
    isNot?: Genders_wsWhereInput
  }

  export type Users_wsScalarRelationFilter = {
    is?: Users_wsWhereInput
    isNot?: Users_wsWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type Pets_wsOrderByRelevanceInput = {
    fields: Pets_wsOrderByRelevanceFieldEnum | Pets_wsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type Pets_wsCountOrderByAggregateInput = {
    id_ws?: SortOrder
    name_ws?: SortOrder
    photo_ws?: SortOrder
    estado_ws?: SortOrder
    raceId_ws?: SortOrder
    categoryId_ws?: SortOrder
    genderId_ws?: SortOrder
    userId_ws?: SortOrder
    latitud_ws?: SortOrder
    longitud_ws?: SortOrder
  }

  export type Pets_wsAvgOrderByAggregateInput = {
    id_ws?: SortOrder
    raceId_ws?: SortOrder
    categoryId_ws?: SortOrder
    genderId_ws?: SortOrder
    userId_ws?: SortOrder
    latitud_ws?: SortOrder
    longitud_ws?: SortOrder
  }

  export type Pets_wsMaxOrderByAggregateInput = {
    id_ws?: SortOrder
    name_ws?: SortOrder
    photo_ws?: SortOrder
    estado_ws?: SortOrder
    raceId_ws?: SortOrder
    categoryId_ws?: SortOrder
    genderId_ws?: SortOrder
    userId_ws?: SortOrder
    latitud_ws?: SortOrder
    longitud_ws?: SortOrder
  }

  export type Pets_wsMinOrderByAggregateInput = {
    id_ws?: SortOrder
    name_ws?: SortOrder
    photo_ws?: SortOrder
    estado_ws?: SortOrder
    raceId_ws?: SortOrder
    categoryId_ws?: SortOrder
    genderId_ws?: SortOrder
    userId_ws?: SortOrder
    latitud_ws?: SortOrder
    longitud_ws?: SortOrder
  }

  export type Pets_wsSumOrderByAggregateInput = {
    id_ws?: SortOrder
    raceId_ws?: SortOrder
    categoryId_ws?: SortOrder
    genderId_ws?: SortOrder
    userId_ws?: SortOrder
    latitud_ws?: SortOrder
    longitud_ws?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type EnumEstados_wsWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Estados_ws | EnumEstados_wsFieldRefInput<$PrismaModel>
    in?: $Enums.Estados_ws[]
    notIn?: $Enums.Estados_ws[]
    not?: NestedEnumEstados_wsWithAggregatesFilter<$PrismaModel> | $Enums.Estados_ws
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstados_wsFilter<$PrismaModel>
    _max?: NestedEnumEstados_wsFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type Races_wsOrderByRelevanceInput = {
    fields: Races_wsOrderByRelevanceFieldEnum | Races_wsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type Races_wsCountOrderByAggregateInput = {
    id_ws?: SortOrder
    name_ws?: SortOrder
  }

  export type Races_wsAvgOrderByAggregateInput = {
    id_ws?: SortOrder
  }

  export type Races_wsMaxOrderByAggregateInput = {
    id_ws?: SortOrder
    name_ws?: SortOrder
  }

  export type Races_wsMinOrderByAggregateInput = {
    id_ws?: SortOrder
    name_ws?: SortOrder
  }

  export type Races_wsSumOrderByAggregateInput = {
    id_ws?: SortOrder
  }

  export type Categories_wsOrderByRelevanceInput = {
    fields: Categories_wsOrderByRelevanceFieldEnum | Categories_wsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type Categories_wsCountOrderByAggregateInput = {
    id_ws?: SortOrder
    name_ws?: SortOrder
  }

  export type Categories_wsAvgOrderByAggregateInput = {
    id_ws?: SortOrder
  }

  export type Categories_wsMaxOrderByAggregateInput = {
    id_ws?: SortOrder
    name_ws?: SortOrder
  }

  export type Categories_wsMinOrderByAggregateInput = {
    id_ws?: SortOrder
    name_ws?: SortOrder
  }

  export type Categories_wsSumOrderByAggregateInput = {
    id_ws?: SortOrder
  }

  export type Genders_wsOrderByRelevanceInput = {
    fields: Genders_wsOrderByRelevanceFieldEnum | Genders_wsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type Genders_wsCountOrderByAggregateInput = {
    id_ws?: SortOrder
    name_ws?: SortOrder
  }

  export type Genders_wsAvgOrderByAggregateInput = {
    id_ws?: SortOrder
  }

  export type Genders_wsMaxOrderByAggregateInput = {
    id_ws?: SortOrder
    name_ws?: SortOrder
  }

  export type Genders_wsMinOrderByAggregateInput = {
    id_ws?: SortOrder
    name_ws?: SortOrder
  }

  export type Genders_wsSumOrderByAggregateInput = {
    id_ws?: SortOrder
  }

  export type Pets_wsCreateNestedManyWithoutUser_wsInput = {
    create?: XOR<Pets_wsCreateWithoutUser_wsInput, Pets_wsUncheckedCreateWithoutUser_wsInput> | Pets_wsCreateWithoutUser_wsInput[] | Pets_wsUncheckedCreateWithoutUser_wsInput[]
    connectOrCreate?: Pets_wsCreateOrConnectWithoutUser_wsInput | Pets_wsCreateOrConnectWithoutUser_wsInput[]
    createMany?: Pets_wsCreateManyUser_wsInputEnvelope
    connect?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
  }

  export type Pets_wsUncheckedCreateNestedManyWithoutUser_wsInput = {
    create?: XOR<Pets_wsCreateWithoutUser_wsInput, Pets_wsUncheckedCreateWithoutUser_wsInput> | Pets_wsCreateWithoutUser_wsInput[] | Pets_wsUncheckedCreateWithoutUser_wsInput[]
    connectOrCreate?: Pets_wsCreateOrConnectWithoutUser_wsInput | Pets_wsCreateOrConnectWithoutUser_wsInput[]
    createMany?: Pets_wsCreateManyUser_wsInputEnvelope
    connect?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type Pets_wsUpdateManyWithoutUser_wsNestedInput = {
    create?: XOR<Pets_wsCreateWithoutUser_wsInput, Pets_wsUncheckedCreateWithoutUser_wsInput> | Pets_wsCreateWithoutUser_wsInput[] | Pets_wsUncheckedCreateWithoutUser_wsInput[]
    connectOrCreate?: Pets_wsCreateOrConnectWithoutUser_wsInput | Pets_wsCreateOrConnectWithoutUser_wsInput[]
    upsert?: Pets_wsUpsertWithWhereUniqueWithoutUser_wsInput | Pets_wsUpsertWithWhereUniqueWithoutUser_wsInput[]
    createMany?: Pets_wsCreateManyUser_wsInputEnvelope
    set?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
    disconnect?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
    delete?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
    connect?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
    update?: Pets_wsUpdateWithWhereUniqueWithoutUser_wsInput | Pets_wsUpdateWithWhereUniqueWithoutUser_wsInput[]
    updateMany?: Pets_wsUpdateManyWithWhereWithoutUser_wsInput | Pets_wsUpdateManyWithWhereWithoutUser_wsInput[]
    deleteMany?: Pets_wsScalarWhereInput | Pets_wsScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type Pets_wsUncheckedUpdateManyWithoutUser_wsNestedInput = {
    create?: XOR<Pets_wsCreateWithoutUser_wsInput, Pets_wsUncheckedCreateWithoutUser_wsInput> | Pets_wsCreateWithoutUser_wsInput[] | Pets_wsUncheckedCreateWithoutUser_wsInput[]
    connectOrCreate?: Pets_wsCreateOrConnectWithoutUser_wsInput | Pets_wsCreateOrConnectWithoutUser_wsInput[]
    upsert?: Pets_wsUpsertWithWhereUniqueWithoutUser_wsInput | Pets_wsUpsertWithWhereUniqueWithoutUser_wsInput[]
    createMany?: Pets_wsCreateManyUser_wsInputEnvelope
    set?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
    disconnect?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
    delete?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
    connect?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
    update?: Pets_wsUpdateWithWhereUniqueWithoutUser_wsInput | Pets_wsUpdateWithWhereUniqueWithoutUser_wsInput[]
    updateMany?: Pets_wsUpdateManyWithWhereWithoutUser_wsInput | Pets_wsUpdateManyWithWhereWithoutUser_wsInput[]
    deleteMany?: Pets_wsScalarWhereInput | Pets_wsScalarWhereInput[]
  }

  export type Races_wsCreateNestedOneWithoutPet_wsInput = {
    create?: XOR<Races_wsCreateWithoutPet_wsInput, Races_wsUncheckedCreateWithoutPet_wsInput>
    connectOrCreate?: Races_wsCreateOrConnectWithoutPet_wsInput
    connect?: Races_wsWhereUniqueInput
  }

  export type Categories_wsCreateNestedOneWithoutPet_wsInput = {
    create?: XOR<Categories_wsCreateWithoutPet_wsInput, Categories_wsUncheckedCreateWithoutPet_wsInput>
    connectOrCreate?: Categories_wsCreateOrConnectWithoutPet_wsInput
    connect?: Categories_wsWhereUniqueInput
  }

  export type Genders_wsCreateNestedOneWithoutPet_wsInput = {
    create?: XOR<Genders_wsCreateWithoutPet_wsInput, Genders_wsUncheckedCreateWithoutPet_wsInput>
    connectOrCreate?: Genders_wsCreateOrConnectWithoutPet_wsInput
    connect?: Genders_wsWhereUniqueInput
  }

  export type Users_wsCreateNestedOneWithoutPet_wsInput = {
    create?: XOR<Users_wsCreateWithoutPet_wsInput, Users_wsUncheckedCreateWithoutPet_wsInput>
    connectOrCreate?: Users_wsCreateOrConnectWithoutPet_wsInput
    connect?: Users_wsWhereUniqueInput
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type EnumEstados_wsFieldUpdateOperationsInput = {
    set?: $Enums.Estados_ws
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type Races_wsUpdateOneRequiredWithoutPet_wsNestedInput = {
    create?: XOR<Races_wsCreateWithoutPet_wsInput, Races_wsUncheckedCreateWithoutPet_wsInput>
    connectOrCreate?: Races_wsCreateOrConnectWithoutPet_wsInput
    upsert?: Races_wsUpsertWithoutPet_wsInput
    connect?: Races_wsWhereUniqueInput
    update?: XOR<XOR<Races_wsUpdateToOneWithWhereWithoutPet_wsInput, Races_wsUpdateWithoutPet_wsInput>, Races_wsUncheckedUpdateWithoutPet_wsInput>
  }

  export type Categories_wsUpdateOneRequiredWithoutPet_wsNestedInput = {
    create?: XOR<Categories_wsCreateWithoutPet_wsInput, Categories_wsUncheckedCreateWithoutPet_wsInput>
    connectOrCreate?: Categories_wsCreateOrConnectWithoutPet_wsInput
    upsert?: Categories_wsUpsertWithoutPet_wsInput
    connect?: Categories_wsWhereUniqueInput
    update?: XOR<XOR<Categories_wsUpdateToOneWithWhereWithoutPet_wsInput, Categories_wsUpdateWithoutPet_wsInput>, Categories_wsUncheckedUpdateWithoutPet_wsInput>
  }

  export type Genders_wsUpdateOneRequiredWithoutPet_wsNestedInput = {
    create?: XOR<Genders_wsCreateWithoutPet_wsInput, Genders_wsUncheckedCreateWithoutPet_wsInput>
    connectOrCreate?: Genders_wsCreateOrConnectWithoutPet_wsInput
    upsert?: Genders_wsUpsertWithoutPet_wsInput
    connect?: Genders_wsWhereUniqueInput
    update?: XOR<XOR<Genders_wsUpdateToOneWithWhereWithoutPet_wsInput, Genders_wsUpdateWithoutPet_wsInput>, Genders_wsUncheckedUpdateWithoutPet_wsInput>
  }

  export type Users_wsUpdateOneRequiredWithoutPet_wsNestedInput = {
    create?: XOR<Users_wsCreateWithoutPet_wsInput, Users_wsUncheckedCreateWithoutPet_wsInput>
    connectOrCreate?: Users_wsCreateOrConnectWithoutPet_wsInput
    upsert?: Users_wsUpsertWithoutPet_wsInput
    connect?: Users_wsWhereUniqueInput
    update?: XOR<XOR<Users_wsUpdateToOneWithWhereWithoutPet_wsInput, Users_wsUpdateWithoutPet_wsInput>, Users_wsUncheckedUpdateWithoutPet_wsInput>
  }

  export type Pets_wsCreateNestedManyWithoutRace_wsInput = {
    create?: XOR<Pets_wsCreateWithoutRace_wsInput, Pets_wsUncheckedCreateWithoutRace_wsInput> | Pets_wsCreateWithoutRace_wsInput[] | Pets_wsUncheckedCreateWithoutRace_wsInput[]
    connectOrCreate?: Pets_wsCreateOrConnectWithoutRace_wsInput | Pets_wsCreateOrConnectWithoutRace_wsInput[]
    createMany?: Pets_wsCreateManyRace_wsInputEnvelope
    connect?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
  }

  export type Pets_wsUncheckedCreateNestedManyWithoutRace_wsInput = {
    create?: XOR<Pets_wsCreateWithoutRace_wsInput, Pets_wsUncheckedCreateWithoutRace_wsInput> | Pets_wsCreateWithoutRace_wsInput[] | Pets_wsUncheckedCreateWithoutRace_wsInput[]
    connectOrCreate?: Pets_wsCreateOrConnectWithoutRace_wsInput | Pets_wsCreateOrConnectWithoutRace_wsInput[]
    createMany?: Pets_wsCreateManyRace_wsInputEnvelope
    connect?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
  }

  export type Pets_wsUpdateManyWithoutRace_wsNestedInput = {
    create?: XOR<Pets_wsCreateWithoutRace_wsInput, Pets_wsUncheckedCreateWithoutRace_wsInput> | Pets_wsCreateWithoutRace_wsInput[] | Pets_wsUncheckedCreateWithoutRace_wsInput[]
    connectOrCreate?: Pets_wsCreateOrConnectWithoutRace_wsInput | Pets_wsCreateOrConnectWithoutRace_wsInput[]
    upsert?: Pets_wsUpsertWithWhereUniqueWithoutRace_wsInput | Pets_wsUpsertWithWhereUniqueWithoutRace_wsInput[]
    createMany?: Pets_wsCreateManyRace_wsInputEnvelope
    set?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
    disconnect?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
    delete?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
    connect?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
    update?: Pets_wsUpdateWithWhereUniqueWithoutRace_wsInput | Pets_wsUpdateWithWhereUniqueWithoutRace_wsInput[]
    updateMany?: Pets_wsUpdateManyWithWhereWithoutRace_wsInput | Pets_wsUpdateManyWithWhereWithoutRace_wsInput[]
    deleteMany?: Pets_wsScalarWhereInput | Pets_wsScalarWhereInput[]
  }

  export type Pets_wsUncheckedUpdateManyWithoutRace_wsNestedInput = {
    create?: XOR<Pets_wsCreateWithoutRace_wsInput, Pets_wsUncheckedCreateWithoutRace_wsInput> | Pets_wsCreateWithoutRace_wsInput[] | Pets_wsUncheckedCreateWithoutRace_wsInput[]
    connectOrCreate?: Pets_wsCreateOrConnectWithoutRace_wsInput | Pets_wsCreateOrConnectWithoutRace_wsInput[]
    upsert?: Pets_wsUpsertWithWhereUniqueWithoutRace_wsInput | Pets_wsUpsertWithWhereUniqueWithoutRace_wsInput[]
    createMany?: Pets_wsCreateManyRace_wsInputEnvelope
    set?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
    disconnect?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
    delete?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
    connect?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
    update?: Pets_wsUpdateWithWhereUniqueWithoutRace_wsInput | Pets_wsUpdateWithWhereUniqueWithoutRace_wsInput[]
    updateMany?: Pets_wsUpdateManyWithWhereWithoutRace_wsInput | Pets_wsUpdateManyWithWhereWithoutRace_wsInput[]
    deleteMany?: Pets_wsScalarWhereInput | Pets_wsScalarWhereInput[]
  }

  export type Pets_wsCreateNestedManyWithoutCategory_wsInput = {
    create?: XOR<Pets_wsCreateWithoutCategory_wsInput, Pets_wsUncheckedCreateWithoutCategory_wsInput> | Pets_wsCreateWithoutCategory_wsInput[] | Pets_wsUncheckedCreateWithoutCategory_wsInput[]
    connectOrCreate?: Pets_wsCreateOrConnectWithoutCategory_wsInput | Pets_wsCreateOrConnectWithoutCategory_wsInput[]
    createMany?: Pets_wsCreateManyCategory_wsInputEnvelope
    connect?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
  }

  export type Pets_wsUncheckedCreateNestedManyWithoutCategory_wsInput = {
    create?: XOR<Pets_wsCreateWithoutCategory_wsInput, Pets_wsUncheckedCreateWithoutCategory_wsInput> | Pets_wsCreateWithoutCategory_wsInput[] | Pets_wsUncheckedCreateWithoutCategory_wsInput[]
    connectOrCreate?: Pets_wsCreateOrConnectWithoutCategory_wsInput | Pets_wsCreateOrConnectWithoutCategory_wsInput[]
    createMany?: Pets_wsCreateManyCategory_wsInputEnvelope
    connect?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
  }

  export type Pets_wsUpdateManyWithoutCategory_wsNestedInput = {
    create?: XOR<Pets_wsCreateWithoutCategory_wsInput, Pets_wsUncheckedCreateWithoutCategory_wsInput> | Pets_wsCreateWithoutCategory_wsInput[] | Pets_wsUncheckedCreateWithoutCategory_wsInput[]
    connectOrCreate?: Pets_wsCreateOrConnectWithoutCategory_wsInput | Pets_wsCreateOrConnectWithoutCategory_wsInput[]
    upsert?: Pets_wsUpsertWithWhereUniqueWithoutCategory_wsInput | Pets_wsUpsertWithWhereUniqueWithoutCategory_wsInput[]
    createMany?: Pets_wsCreateManyCategory_wsInputEnvelope
    set?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
    disconnect?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
    delete?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
    connect?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
    update?: Pets_wsUpdateWithWhereUniqueWithoutCategory_wsInput | Pets_wsUpdateWithWhereUniqueWithoutCategory_wsInput[]
    updateMany?: Pets_wsUpdateManyWithWhereWithoutCategory_wsInput | Pets_wsUpdateManyWithWhereWithoutCategory_wsInput[]
    deleteMany?: Pets_wsScalarWhereInput | Pets_wsScalarWhereInput[]
  }

  export type Pets_wsUncheckedUpdateManyWithoutCategory_wsNestedInput = {
    create?: XOR<Pets_wsCreateWithoutCategory_wsInput, Pets_wsUncheckedCreateWithoutCategory_wsInput> | Pets_wsCreateWithoutCategory_wsInput[] | Pets_wsUncheckedCreateWithoutCategory_wsInput[]
    connectOrCreate?: Pets_wsCreateOrConnectWithoutCategory_wsInput | Pets_wsCreateOrConnectWithoutCategory_wsInput[]
    upsert?: Pets_wsUpsertWithWhereUniqueWithoutCategory_wsInput | Pets_wsUpsertWithWhereUniqueWithoutCategory_wsInput[]
    createMany?: Pets_wsCreateManyCategory_wsInputEnvelope
    set?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
    disconnect?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
    delete?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
    connect?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
    update?: Pets_wsUpdateWithWhereUniqueWithoutCategory_wsInput | Pets_wsUpdateWithWhereUniqueWithoutCategory_wsInput[]
    updateMany?: Pets_wsUpdateManyWithWhereWithoutCategory_wsInput | Pets_wsUpdateManyWithWhereWithoutCategory_wsInput[]
    deleteMany?: Pets_wsScalarWhereInput | Pets_wsScalarWhereInput[]
  }

  export type Pets_wsCreateNestedManyWithoutGender_wsInput = {
    create?: XOR<Pets_wsCreateWithoutGender_wsInput, Pets_wsUncheckedCreateWithoutGender_wsInput> | Pets_wsCreateWithoutGender_wsInput[] | Pets_wsUncheckedCreateWithoutGender_wsInput[]
    connectOrCreate?: Pets_wsCreateOrConnectWithoutGender_wsInput | Pets_wsCreateOrConnectWithoutGender_wsInput[]
    createMany?: Pets_wsCreateManyGender_wsInputEnvelope
    connect?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
  }

  export type Pets_wsUncheckedCreateNestedManyWithoutGender_wsInput = {
    create?: XOR<Pets_wsCreateWithoutGender_wsInput, Pets_wsUncheckedCreateWithoutGender_wsInput> | Pets_wsCreateWithoutGender_wsInput[] | Pets_wsUncheckedCreateWithoutGender_wsInput[]
    connectOrCreate?: Pets_wsCreateOrConnectWithoutGender_wsInput | Pets_wsCreateOrConnectWithoutGender_wsInput[]
    createMany?: Pets_wsCreateManyGender_wsInputEnvelope
    connect?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
  }

  export type Pets_wsUpdateManyWithoutGender_wsNestedInput = {
    create?: XOR<Pets_wsCreateWithoutGender_wsInput, Pets_wsUncheckedCreateWithoutGender_wsInput> | Pets_wsCreateWithoutGender_wsInput[] | Pets_wsUncheckedCreateWithoutGender_wsInput[]
    connectOrCreate?: Pets_wsCreateOrConnectWithoutGender_wsInput | Pets_wsCreateOrConnectWithoutGender_wsInput[]
    upsert?: Pets_wsUpsertWithWhereUniqueWithoutGender_wsInput | Pets_wsUpsertWithWhereUniqueWithoutGender_wsInput[]
    createMany?: Pets_wsCreateManyGender_wsInputEnvelope
    set?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
    disconnect?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
    delete?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
    connect?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
    update?: Pets_wsUpdateWithWhereUniqueWithoutGender_wsInput | Pets_wsUpdateWithWhereUniqueWithoutGender_wsInput[]
    updateMany?: Pets_wsUpdateManyWithWhereWithoutGender_wsInput | Pets_wsUpdateManyWithWhereWithoutGender_wsInput[]
    deleteMany?: Pets_wsScalarWhereInput | Pets_wsScalarWhereInput[]
  }

  export type Pets_wsUncheckedUpdateManyWithoutGender_wsNestedInput = {
    create?: XOR<Pets_wsCreateWithoutGender_wsInput, Pets_wsUncheckedCreateWithoutGender_wsInput> | Pets_wsCreateWithoutGender_wsInput[] | Pets_wsUncheckedCreateWithoutGender_wsInput[]
    connectOrCreate?: Pets_wsCreateOrConnectWithoutGender_wsInput | Pets_wsCreateOrConnectWithoutGender_wsInput[]
    upsert?: Pets_wsUpsertWithWhereUniqueWithoutGender_wsInput | Pets_wsUpsertWithWhereUniqueWithoutGender_wsInput[]
    createMany?: Pets_wsCreateManyGender_wsInputEnvelope
    set?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
    disconnect?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
    delete?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
    connect?: Pets_wsWhereUniqueInput | Pets_wsWhereUniqueInput[]
    update?: Pets_wsUpdateWithWhereUniqueWithoutGender_wsInput | Pets_wsUpdateWithWhereUniqueWithoutGender_wsInput[]
    updateMany?: Pets_wsUpdateManyWithWhereWithoutGender_wsInput | Pets_wsUpdateManyWithWhereWithoutGender_wsInput[]
    deleteMany?: Pets_wsScalarWhereInput | Pets_wsScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedEnumEstados_wsFilter<$PrismaModel = never> = {
    equals?: $Enums.Estados_ws | EnumEstados_wsFieldRefInput<$PrismaModel>
    in?: $Enums.Estados_ws[]
    notIn?: $Enums.Estados_ws[]
    not?: NestedEnumEstados_wsFilter<$PrismaModel> | $Enums.Estados_ws
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumEstados_wsWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Estados_ws | EnumEstados_wsFieldRefInput<$PrismaModel>
    in?: $Enums.Estados_ws[]
    notIn?: $Enums.Estados_ws[]
    not?: NestedEnumEstados_wsWithAggregatesFilter<$PrismaModel> | $Enums.Estados_ws
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEstados_wsFilter<$PrismaModel>
    _max?: NestedEnumEstados_wsFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type Pets_wsCreateWithoutUser_wsInput = {
    name_ws?: string | null
    photo_ws: string
    estado_ws?: $Enums.Estados_ws
    latitud_ws?: number | null
    longitud_ws?: number | null
    race_ws: Races_wsCreateNestedOneWithoutPet_wsInput
    category_ws: Categories_wsCreateNestedOneWithoutPet_wsInput
    gender_ws: Genders_wsCreateNestedOneWithoutPet_wsInput
  }

  export type Pets_wsUncheckedCreateWithoutUser_wsInput = {
    id_ws?: number
    name_ws?: string | null
    photo_ws: string
    estado_ws?: $Enums.Estados_ws
    raceId_ws: number
    categoryId_ws: number
    genderId_ws: number
    latitud_ws?: number | null
    longitud_ws?: number | null
  }

  export type Pets_wsCreateOrConnectWithoutUser_wsInput = {
    where: Pets_wsWhereUniqueInput
    create: XOR<Pets_wsCreateWithoutUser_wsInput, Pets_wsUncheckedCreateWithoutUser_wsInput>
  }

  export type Pets_wsCreateManyUser_wsInputEnvelope = {
    data: Pets_wsCreateManyUser_wsInput | Pets_wsCreateManyUser_wsInput[]
    skipDuplicates?: boolean
  }

  export type Pets_wsUpsertWithWhereUniqueWithoutUser_wsInput = {
    where: Pets_wsWhereUniqueInput
    update: XOR<Pets_wsUpdateWithoutUser_wsInput, Pets_wsUncheckedUpdateWithoutUser_wsInput>
    create: XOR<Pets_wsCreateWithoutUser_wsInput, Pets_wsUncheckedCreateWithoutUser_wsInput>
  }

  export type Pets_wsUpdateWithWhereUniqueWithoutUser_wsInput = {
    where: Pets_wsWhereUniqueInput
    data: XOR<Pets_wsUpdateWithoutUser_wsInput, Pets_wsUncheckedUpdateWithoutUser_wsInput>
  }

  export type Pets_wsUpdateManyWithWhereWithoutUser_wsInput = {
    where: Pets_wsScalarWhereInput
    data: XOR<Pets_wsUpdateManyMutationInput, Pets_wsUncheckedUpdateManyWithoutUser_wsInput>
  }

  export type Pets_wsScalarWhereInput = {
    AND?: Pets_wsScalarWhereInput | Pets_wsScalarWhereInput[]
    OR?: Pets_wsScalarWhereInput[]
    NOT?: Pets_wsScalarWhereInput | Pets_wsScalarWhereInput[]
    id_ws?: IntFilter<"Pets_ws"> | number
    name_ws?: StringNullableFilter<"Pets_ws"> | string | null
    photo_ws?: StringFilter<"Pets_ws"> | string
    estado_ws?: EnumEstados_wsFilter<"Pets_ws"> | $Enums.Estados_ws
    raceId_ws?: IntFilter<"Pets_ws"> | number
    categoryId_ws?: IntFilter<"Pets_ws"> | number
    genderId_ws?: IntFilter<"Pets_ws"> | number
    userId_ws?: IntFilter<"Pets_ws"> | number
    latitud_ws?: FloatNullableFilter<"Pets_ws"> | number | null
    longitud_ws?: FloatNullableFilter<"Pets_ws"> | number | null
  }

  export type Races_wsCreateWithoutPet_wsInput = {
    name_ws: string
  }

  export type Races_wsUncheckedCreateWithoutPet_wsInput = {
    id_ws?: number
    name_ws: string
  }

  export type Races_wsCreateOrConnectWithoutPet_wsInput = {
    where: Races_wsWhereUniqueInput
    create: XOR<Races_wsCreateWithoutPet_wsInput, Races_wsUncheckedCreateWithoutPet_wsInput>
  }

  export type Categories_wsCreateWithoutPet_wsInput = {
    name_ws: string
  }

  export type Categories_wsUncheckedCreateWithoutPet_wsInput = {
    id_ws?: number
    name_ws: string
  }

  export type Categories_wsCreateOrConnectWithoutPet_wsInput = {
    where: Categories_wsWhereUniqueInput
    create: XOR<Categories_wsCreateWithoutPet_wsInput, Categories_wsUncheckedCreateWithoutPet_wsInput>
  }

  export type Genders_wsCreateWithoutPet_wsInput = {
    name_ws: string
  }

  export type Genders_wsUncheckedCreateWithoutPet_wsInput = {
    id_ws?: number
    name_ws: string
  }

  export type Genders_wsCreateOrConnectWithoutPet_wsInput = {
    where: Genders_wsWhereUniqueInput
    create: XOR<Genders_wsCreateWithoutPet_wsInput, Genders_wsUncheckedCreateWithoutPet_wsInput>
  }

  export type Users_wsCreateWithoutPet_wsInput = {
    fullname_ws: string
    email_ws: string
    password_ws: string
  }

  export type Users_wsUncheckedCreateWithoutPet_wsInput = {
    id_ws?: number
    fullname_ws: string
    email_ws: string
    password_ws: string
  }

  export type Users_wsCreateOrConnectWithoutPet_wsInput = {
    where: Users_wsWhereUniqueInput
    create: XOR<Users_wsCreateWithoutPet_wsInput, Users_wsUncheckedCreateWithoutPet_wsInput>
  }

  export type Races_wsUpsertWithoutPet_wsInput = {
    update: XOR<Races_wsUpdateWithoutPet_wsInput, Races_wsUncheckedUpdateWithoutPet_wsInput>
    create: XOR<Races_wsCreateWithoutPet_wsInput, Races_wsUncheckedCreateWithoutPet_wsInput>
    where?: Races_wsWhereInput
  }

  export type Races_wsUpdateToOneWithWhereWithoutPet_wsInput = {
    where?: Races_wsWhereInput
    data: XOR<Races_wsUpdateWithoutPet_wsInput, Races_wsUncheckedUpdateWithoutPet_wsInput>
  }

  export type Races_wsUpdateWithoutPet_wsInput = {
    name_ws?: StringFieldUpdateOperationsInput | string
  }

  export type Races_wsUncheckedUpdateWithoutPet_wsInput = {
    id_ws?: IntFieldUpdateOperationsInput | number
    name_ws?: StringFieldUpdateOperationsInput | string
  }

  export type Categories_wsUpsertWithoutPet_wsInput = {
    update: XOR<Categories_wsUpdateWithoutPet_wsInput, Categories_wsUncheckedUpdateWithoutPet_wsInput>
    create: XOR<Categories_wsCreateWithoutPet_wsInput, Categories_wsUncheckedCreateWithoutPet_wsInput>
    where?: Categories_wsWhereInput
  }

  export type Categories_wsUpdateToOneWithWhereWithoutPet_wsInput = {
    where?: Categories_wsWhereInput
    data: XOR<Categories_wsUpdateWithoutPet_wsInput, Categories_wsUncheckedUpdateWithoutPet_wsInput>
  }

  export type Categories_wsUpdateWithoutPet_wsInput = {
    name_ws?: StringFieldUpdateOperationsInput | string
  }

  export type Categories_wsUncheckedUpdateWithoutPet_wsInput = {
    id_ws?: IntFieldUpdateOperationsInput | number
    name_ws?: StringFieldUpdateOperationsInput | string
  }

  export type Genders_wsUpsertWithoutPet_wsInput = {
    update: XOR<Genders_wsUpdateWithoutPet_wsInput, Genders_wsUncheckedUpdateWithoutPet_wsInput>
    create: XOR<Genders_wsCreateWithoutPet_wsInput, Genders_wsUncheckedCreateWithoutPet_wsInput>
    where?: Genders_wsWhereInput
  }

  export type Genders_wsUpdateToOneWithWhereWithoutPet_wsInput = {
    where?: Genders_wsWhereInput
    data: XOR<Genders_wsUpdateWithoutPet_wsInput, Genders_wsUncheckedUpdateWithoutPet_wsInput>
  }

  export type Genders_wsUpdateWithoutPet_wsInput = {
    name_ws?: StringFieldUpdateOperationsInput | string
  }

  export type Genders_wsUncheckedUpdateWithoutPet_wsInput = {
    id_ws?: IntFieldUpdateOperationsInput | number
    name_ws?: StringFieldUpdateOperationsInput | string
  }

  export type Users_wsUpsertWithoutPet_wsInput = {
    update: XOR<Users_wsUpdateWithoutPet_wsInput, Users_wsUncheckedUpdateWithoutPet_wsInput>
    create: XOR<Users_wsCreateWithoutPet_wsInput, Users_wsUncheckedCreateWithoutPet_wsInput>
    where?: Users_wsWhereInput
  }

  export type Users_wsUpdateToOneWithWhereWithoutPet_wsInput = {
    where?: Users_wsWhereInput
    data: XOR<Users_wsUpdateWithoutPet_wsInput, Users_wsUncheckedUpdateWithoutPet_wsInput>
  }

  export type Users_wsUpdateWithoutPet_wsInput = {
    fullname_ws?: StringFieldUpdateOperationsInput | string
    email_ws?: StringFieldUpdateOperationsInput | string
    password_ws?: StringFieldUpdateOperationsInput | string
  }

  export type Users_wsUncheckedUpdateWithoutPet_wsInput = {
    id_ws?: IntFieldUpdateOperationsInput | number
    fullname_ws?: StringFieldUpdateOperationsInput | string
    email_ws?: StringFieldUpdateOperationsInput | string
    password_ws?: StringFieldUpdateOperationsInput | string
  }

  export type Pets_wsCreateWithoutRace_wsInput = {
    name_ws?: string | null
    photo_ws: string
    estado_ws?: $Enums.Estados_ws
    latitud_ws?: number | null
    longitud_ws?: number | null
    category_ws: Categories_wsCreateNestedOneWithoutPet_wsInput
    gender_ws: Genders_wsCreateNestedOneWithoutPet_wsInput
    user_ws: Users_wsCreateNestedOneWithoutPet_wsInput
  }

  export type Pets_wsUncheckedCreateWithoutRace_wsInput = {
    id_ws?: number
    name_ws?: string | null
    photo_ws: string
    estado_ws?: $Enums.Estados_ws
    categoryId_ws: number
    genderId_ws: number
    userId_ws: number
    latitud_ws?: number | null
    longitud_ws?: number | null
  }

  export type Pets_wsCreateOrConnectWithoutRace_wsInput = {
    where: Pets_wsWhereUniqueInput
    create: XOR<Pets_wsCreateWithoutRace_wsInput, Pets_wsUncheckedCreateWithoutRace_wsInput>
  }

  export type Pets_wsCreateManyRace_wsInputEnvelope = {
    data: Pets_wsCreateManyRace_wsInput | Pets_wsCreateManyRace_wsInput[]
    skipDuplicates?: boolean
  }

  export type Pets_wsUpsertWithWhereUniqueWithoutRace_wsInput = {
    where: Pets_wsWhereUniqueInput
    update: XOR<Pets_wsUpdateWithoutRace_wsInput, Pets_wsUncheckedUpdateWithoutRace_wsInput>
    create: XOR<Pets_wsCreateWithoutRace_wsInput, Pets_wsUncheckedCreateWithoutRace_wsInput>
  }

  export type Pets_wsUpdateWithWhereUniqueWithoutRace_wsInput = {
    where: Pets_wsWhereUniqueInput
    data: XOR<Pets_wsUpdateWithoutRace_wsInput, Pets_wsUncheckedUpdateWithoutRace_wsInput>
  }

  export type Pets_wsUpdateManyWithWhereWithoutRace_wsInput = {
    where: Pets_wsScalarWhereInput
    data: XOR<Pets_wsUpdateManyMutationInput, Pets_wsUncheckedUpdateManyWithoutRace_wsInput>
  }

  export type Pets_wsCreateWithoutCategory_wsInput = {
    name_ws?: string | null
    photo_ws: string
    estado_ws?: $Enums.Estados_ws
    latitud_ws?: number | null
    longitud_ws?: number | null
    race_ws: Races_wsCreateNestedOneWithoutPet_wsInput
    gender_ws: Genders_wsCreateNestedOneWithoutPet_wsInput
    user_ws: Users_wsCreateNestedOneWithoutPet_wsInput
  }

  export type Pets_wsUncheckedCreateWithoutCategory_wsInput = {
    id_ws?: number
    name_ws?: string | null
    photo_ws: string
    estado_ws?: $Enums.Estados_ws
    raceId_ws: number
    genderId_ws: number
    userId_ws: number
    latitud_ws?: number | null
    longitud_ws?: number | null
  }

  export type Pets_wsCreateOrConnectWithoutCategory_wsInput = {
    where: Pets_wsWhereUniqueInput
    create: XOR<Pets_wsCreateWithoutCategory_wsInput, Pets_wsUncheckedCreateWithoutCategory_wsInput>
  }

  export type Pets_wsCreateManyCategory_wsInputEnvelope = {
    data: Pets_wsCreateManyCategory_wsInput | Pets_wsCreateManyCategory_wsInput[]
    skipDuplicates?: boolean
  }

  export type Pets_wsUpsertWithWhereUniqueWithoutCategory_wsInput = {
    where: Pets_wsWhereUniqueInput
    update: XOR<Pets_wsUpdateWithoutCategory_wsInput, Pets_wsUncheckedUpdateWithoutCategory_wsInput>
    create: XOR<Pets_wsCreateWithoutCategory_wsInput, Pets_wsUncheckedCreateWithoutCategory_wsInput>
  }

  export type Pets_wsUpdateWithWhereUniqueWithoutCategory_wsInput = {
    where: Pets_wsWhereUniqueInput
    data: XOR<Pets_wsUpdateWithoutCategory_wsInput, Pets_wsUncheckedUpdateWithoutCategory_wsInput>
  }

  export type Pets_wsUpdateManyWithWhereWithoutCategory_wsInput = {
    where: Pets_wsScalarWhereInput
    data: XOR<Pets_wsUpdateManyMutationInput, Pets_wsUncheckedUpdateManyWithoutCategory_wsInput>
  }

  export type Pets_wsCreateWithoutGender_wsInput = {
    name_ws?: string | null
    photo_ws: string
    estado_ws?: $Enums.Estados_ws
    latitud_ws?: number | null
    longitud_ws?: number | null
    race_ws: Races_wsCreateNestedOneWithoutPet_wsInput
    category_ws: Categories_wsCreateNestedOneWithoutPet_wsInput
    user_ws: Users_wsCreateNestedOneWithoutPet_wsInput
  }

  export type Pets_wsUncheckedCreateWithoutGender_wsInput = {
    id_ws?: number
    name_ws?: string | null
    photo_ws: string
    estado_ws?: $Enums.Estados_ws
    raceId_ws: number
    categoryId_ws: number
    userId_ws: number
    latitud_ws?: number | null
    longitud_ws?: number | null
  }

  export type Pets_wsCreateOrConnectWithoutGender_wsInput = {
    where: Pets_wsWhereUniqueInput
    create: XOR<Pets_wsCreateWithoutGender_wsInput, Pets_wsUncheckedCreateWithoutGender_wsInput>
  }

  export type Pets_wsCreateManyGender_wsInputEnvelope = {
    data: Pets_wsCreateManyGender_wsInput | Pets_wsCreateManyGender_wsInput[]
    skipDuplicates?: boolean
  }

  export type Pets_wsUpsertWithWhereUniqueWithoutGender_wsInput = {
    where: Pets_wsWhereUniqueInput
    update: XOR<Pets_wsUpdateWithoutGender_wsInput, Pets_wsUncheckedUpdateWithoutGender_wsInput>
    create: XOR<Pets_wsCreateWithoutGender_wsInput, Pets_wsUncheckedCreateWithoutGender_wsInput>
  }

  export type Pets_wsUpdateWithWhereUniqueWithoutGender_wsInput = {
    where: Pets_wsWhereUniqueInput
    data: XOR<Pets_wsUpdateWithoutGender_wsInput, Pets_wsUncheckedUpdateWithoutGender_wsInput>
  }

  export type Pets_wsUpdateManyWithWhereWithoutGender_wsInput = {
    where: Pets_wsScalarWhereInput
    data: XOR<Pets_wsUpdateManyMutationInput, Pets_wsUncheckedUpdateManyWithoutGender_wsInput>
  }

  export type Pets_wsCreateManyUser_wsInput = {
    id_ws?: number
    name_ws?: string | null
    photo_ws: string
    estado_ws?: $Enums.Estados_ws
    raceId_ws: number
    categoryId_ws: number
    genderId_ws: number
    latitud_ws?: number | null
    longitud_ws?: number | null
  }

  export type Pets_wsUpdateWithoutUser_wsInput = {
    name_ws?: NullableStringFieldUpdateOperationsInput | string | null
    photo_ws?: StringFieldUpdateOperationsInput | string
    estado_ws?: EnumEstados_wsFieldUpdateOperationsInput | $Enums.Estados_ws
    latitud_ws?: NullableFloatFieldUpdateOperationsInput | number | null
    longitud_ws?: NullableFloatFieldUpdateOperationsInput | number | null
    race_ws?: Races_wsUpdateOneRequiredWithoutPet_wsNestedInput
    category_ws?: Categories_wsUpdateOneRequiredWithoutPet_wsNestedInput
    gender_ws?: Genders_wsUpdateOneRequiredWithoutPet_wsNestedInput
  }

  export type Pets_wsUncheckedUpdateWithoutUser_wsInput = {
    id_ws?: IntFieldUpdateOperationsInput | number
    name_ws?: NullableStringFieldUpdateOperationsInput | string | null
    photo_ws?: StringFieldUpdateOperationsInput | string
    estado_ws?: EnumEstados_wsFieldUpdateOperationsInput | $Enums.Estados_ws
    raceId_ws?: IntFieldUpdateOperationsInput | number
    categoryId_ws?: IntFieldUpdateOperationsInput | number
    genderId_ws?: IntFieldUpdateOperationsInput | number
    latitud_ws?: NullableFloatFieldUpdateOperationsInput | number | null
    longitud_ws?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type Pets_wsUncheckedUpdateManyWithoutUser_wsInput = {
    id_ws?: IntFieldUpdateOperationsInput | number
    name_ws?: NullableStringFieldUpdateOperationsInput | string | null
    photo_ws?: StringFieldUpdateOperationsInput | string
    estado_ws?: EnumEstados_wsFieldUpdateOperationsInput | $Enums.Estados_ws
    raceId_ws?: IntFieldUpdateOperationsInput | number
    categoryId_ws?: IntFieldUpdateOperationsInput | number
    genderId_ws?: IntFieldUpdateOperationsInput | number
    latitud_ws?: NullableFloatFieldUpdateOperationsInput | number | null
    longitud_ws?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type Pets_wsCreateManyRace_wsInput = {
    id_ws?: number
    name_ws?: string | null
    photo_ws: string
    estado_ws?: $Enums.Estados_ws
    categoryId_ws: number
    genderId_ws: number
    userId_ws: number
    latitud_ws?: number | null
    longitud_ws?: number | null
  }

  export type Pets_wsUpdateWithoutRace_wsInput = {
    name_ws?: NullableStringFieldUpdateOperationsInput | string | null
    photo_ws?: StringFieldUpdateOperationsInput | string
    estado_ws?: EnumEstados_wsFieldUpdateOperationsInput | $Enums.Estados_ws
    latitud_ws?: NullableFloatFieldUpdateOperationsInput | number | null
    longitud_ws?: NullableFloatFieldUpdateOperationsInput | number | null
    category_ws?: Categories_wsUpdateOneRequiredWithoutPet_wsNestedInput
    gender_ws?: Genders_wsUpdateOneRequiredWithoutPet_wsNestedInput
    user_ws?: Users_wsUpdateOneRequiredWithoutPet_wsNestedInput
  }

  export type Pets_wsUncheckedUpdateWithoutRace_wsInput = {
    id_ws?: IntFieldUpdateOperationsInput | number
    name_ws?: NullableStringFieldUpdateOperationsInput | string | null
    photo_ws?: StringFieldUpdateOperationsInput | string
    estado_ws?: EnumEstados_wsFieldUpdateOperationsInput | $Enums.Estados_ws
    categoryId_ws?: IntFieldUpdateOperationsInput | number
    genderId_ws?: IntFieldUpdateOperationsInput | number
    userId_ws?: IntFieldUpdateOperationsInput | number
    latitud_ws?: NullableFloatFieldUpdateOperationsInput | number | null
    longitud_ws?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type Pets_wsUncheckedUpdateManyWithoutRace_wsInput = {
    id_ws?: IntFieldUpdateOperationsInput | number
    name_ws?: NullableStringFieldUpdateOperationsInput | string | null
    photo_ws?: StringFieldUpdateOperationsInput | string
    estado_ws?: EnumEstados_wsFieldUpdateOperationsInput | $Enums.Estados_ws
    categoryId_ws?: IntFieldUpdateOperationsInput | number
    genderId_ws?: IntFieldUpdateOperationsInput | number
    userId_ws?: IntFieldUpdateOperationsInput | number
    latitud_ws?: NullableFloatFieldUpdateOperationsInput | number | null
    longitud_ws?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type Pets_wsCreateManyCategory_wsInput = {
    id_ws?: number
    name_ws?: string | null
    photo_ws: string
    estado_ws?: $Enums.Estados_ws
    raceId_ws: number
    genderId_ws: number
    userId_ws: number
    latitud_ws?: number | null
    longitud_ws?: number | null
  }

  export type Pets_wsUpdateWithoutCategory_wsInput = {
    name_ws?: NullableStringFieldUpdateOperationsInput | string | null
    photo_ws?: StringFieldUpdateOperationsInput | string
    estado_ws?: EnumEstados_wsFieldUpdateOperationsInput | $Enums.Estados_ws
    latitud_ws?: NullableFloatFieldUpdateOperationsInput | number | null
    longitud_ws?: NullableFloatFieldUpdateOperationsInput | number | null
    race_ws?: Races_wsUpdateOneRequiredWithoutPet_wsNestedInput
    gender_ws?: Genders_wsUpdateOneRequiredWithoutPet_wsNestedInput
    user_ws?: Users_wsUpdateOneRequiredWithoutPet_wsNestedInput
  }

  export type Pets_wsUncheckedUpdateWithoutCategory_wsInput = {
    id_ws?: IntFieldUpdateOperationsInput | number
    name_ws?: NullableStringFieldUpdateOperationsInput | string | null
    photo_ws?: StringFieldUpdateOperationsInput | string
    estado_ws?: EnumEstados_wsFieldUpdateOperationsInput | $Enums.Estados_ws
    raceId_ws?: IntFieldUpdateOperationsInput | number
    genderId_ws?: IntFieldUpdateOperationsInput | number
    userId_ws?: IntFieldUpdateOperationsInput | number
    latitud_ws?: NullableFloatFieldUpdateOperationsInput | number | null
    longitud_ws?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type Pets_wsUncheckedUpdateManyWithoutCategory_wsInput = {
    id_ws?: IntFieldUpdateOperationsInput | number
    name_ws?: NullableStringFieldUpdateOperationsInput | string | null
    photo_ws?: StringFieldUpdateOperationsInput | string
    estado_ws?: EnumEstados_wsFieldUpdateOperationsInput | $Enums.Estados_ws
    raceId_ws?: IntFieldUpdateOperationsInput | number
    genderId_ws?: IntFieldUpdateOperationsInput | number
    userId_ws?: IntFieldUpdateOperationsInput | number
    latitud_ws?: NullableFloatFieldUpdateOperationsInput | number | null
    longitud_ws?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type Pets_wsCreateManyGender_wsInput = {
    id_ws?: number
    name_ws?: string | null
    photo_ws: string
    estado_ws?: $Enums.Estados_ws
    raceId_ws: number
    categoryId_ws: number
    userId_ws: number
    latitud_ws?: number | null
    longitud_ws?: number | null
  }

  export type Pets_wsUpdateWithoutGender_wsInput = {
    name_ws?: NullableStringFieldUpdateOperationsInput | string | null
    photo_ws?: StringFieldUpdateOperationsInput | string
    estado_ws?: EnumEstados_wsFieldUpdateOperationsInput | $Enums.Estados_ws
    latitud_ws?: NullableFloatFieldUpdateOperationsInput | number | null
    longitud_ws?: NullableFloatFieldUpdateOperationsInput | number | null
    race_ws?: Races_wsUpdateOneRequiredWithoutPet_wsNestedInput
    category_ws?: Categories_wsUpdateOneRequiredWithoutPet_wsNestedInput
    user_ws?: Users_wsUpdateOneRequiredWithoutPet_wsNestedInput
  }

  export type Pets_wsUncheckedUpdateWithoutGender_wsInput = {
    id_ws?: IntFieldUpdateOperationsInput | number
    name_ws?: NullableStringFieldUpdateOperationsInput | string | null
    photo_ws?: StringFieldUpdateOperationsInput | string
    estado_ws?: EnumEstados_wsFieldUpdateOperationsInput | $Enums.Estados_ws
    raceId_ws?: IntFieldUpdateOperationsInput | number
    categoryId_ws?: IntFieldUpdateOperationsInput | number
    userId_ws?: IntFieldUpdateOperationsInput | number
    latitud_ws?: NullableFloatFieldUpdateOperationsInput | number | null
    longitud_ws?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type Pets_wsUncheckedUpdateManyWithoutGender_wsInput = {
    id_ws?: IntFieldUpdateOperationsInput | number
    name_ws?: NullableStringFieldUpdateOperationsInput | string | null
    photo_ws?: StringFieldUpdateOperationsInput | string
    estado_ws?: EnumEstados_wsFieldUpdateOperationsInput | $Enums.Estados_ws
    raceId_ws?: IntFieldUpdateOperationsInput | number
    categoryId_ws?: IntFieldUpdateOperationsInput | number
    userId_ws?: IntFieldUpdateOperationsInput | number
    latitud_ws?: NullableFloatFieldUpdateOperationsInput | number | null
    longitud_ws?: NullableFloatFieldUpdateOperationsInput | number | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}